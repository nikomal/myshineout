(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{20:function(n,a,e){"use strict";a.a={red:{id:1,name:"red"},orange:{id:2,name:"orange"},yellow:{id:3,name:"yellow"},green:{id:4,name:"green"},cyan:{id:5,name:"cyan"},blue:{id:6,name:"blue"},violet:{id:7,name:"violet"}}},252:function(n,a){n.exports=""},253:function(n,a){n.exports="# Data.List 数据处理\n\n这不是一个组件，使一个辅助组件进行数据处理的类。\n\n在项目中有很多组件（例如Select，Table）需要传入复杂的数据，有一些交互的数据需要记录并返回提交。\n这个类可以辅助这类组件做一些数据格式化的操作。\n\n\n## 示例\n\n这个页面中示例用到的数据如下\n```\nconst data = {\n  red: { id: 1, name: 'red' },\n  orange: { id: 2, name: 'orange' },\n  yellow: { id: 3, name: 'yellow' },\n  green: { id: 4, name: 'green' },\n  cyan: { id: 5, name: 'cyan' },\n  blue: { id: 6, name: 'blue' },\n  violet: { id: 7, name: 'violet' },\n}\n```\n<code name=\"example\" />\n\n## 初始化参数\n\n### format  *null | string | function(d)*\nformat 是Datum内部用来把复杂数据格式化为需要的值，可以为 null, string, function\n\n- **null** - 为空时，返回值为原始数据\n- **string** - 为string时，会作为key从原始数据中获取值，相当于 (d) => d\\[format]\n- **function(d)** - d 为单条原始数据\n\n<code name=\"format\" />\n\n### onChange *function(value)*\n值改变时触发的回调函数。value 为 format 函数格式化后的数据。\n\n<code name=\"onchange\" />\n\n### separator *null | string*\n分隔符。为空时，value会保留Array格式。不为空时，value会处理为 separator 分隔的字符串。\n\n<code name=\"separator\" />\n\n### prediction *function(val, d):bool*\nDatum内部存储的是format之后的值，所以需要prediction函数来比对存储的值和原始数据是否一致。不设置，会使用此默认值:\n```\n(val, d) => val === format(d)\n```\n\n通常用在 value 为字符串类型时，数据格式不一致的情况。\n\n<code name=\"prediction\" />\n\n### disabled *function(d):bool*\n判断数据项是否禁用。如果返回 true，add 和 remove 函数会忽略此数据。\n\n<code name=\"disabled\" />\n\n### value *array | string*\n初始值，可以为 Array 或 String。\n\n## 函数\n\n### getValue *function():array|string*\n获取当前值。根据separator的设置，返回array或者string。\n\n### setValue *function(array|string)*\n设置值。新的值会替代当前值。\n\n### add *fuction(array|object)*\n添加数据。值为 format 前的原始数据，单条或者一组数据。\n\n### remove *fuction(array|object)*\n移除数据。值为 format 前的原始数据，单条或者一组数据。\n\n### clear *function*\n清空数据。"},40:function(n,a,e){"use strict";var t=function(){function n(n,a){for(var e=0;e<a.length;e++){var t=a[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}return function(a,e,t){return e&&n(a.prototype,e),t&&n(a,t),a}}(),o=window.console,r=function(){function n(){!function(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}(this,n),this.logs={default:[]},this.current=this.logs.default}return t(n,[{key:"setType",value:function(n){this.logs[n]||(this.logs[n]=[]),this.current=this.logs[n]}},{key:"log",value:function(){for(var n=arguments.length,a=Array(n),e=0;e<n;e++)a[e]=arguments[e];var t=a.map(function(n){return""+JSON.stringify(n)});this.current.push(t)}}]),n}();a.a={start:function(){window.console=new r},setType:function(n){window.console.setType(n)},end:function(){var n=window.console.logs;return window.console=o,n}}},541:function(n,a){n.exports="import { Datum } from 'shineout'\nimport data from './data'\n\nconst onChange = value => console.log(value)\n\nlet datum = new Datum.List({ format: 'id', value: [2, 3], onChange })\ndatum.add(data.red)\n\ndatum = new Datum.List({\n  format: 'name', onChange, separator: ',', value: 'red,yellow',\n})\ndatum.add(data.blue)\ndatum.remove(data.yellow)\n\ndatum = new Datum.List({\n  format: 'name', onChange, separator: '|', value: 'red|yellow',\n})\ndatum.add(data.cyan)\n"},542:function(n,a){n.exports="import { Datum } from 'shineout'\nimport data from './data'\n\nconst datum = new Datum.List({\n  format: 'id',\n  separator: ',',\n  prediction: (val, d) => parseInt(val, 10) === d.id,\n  value: '2,3',\n})\ndatum.add(data.red)\nconsole.log(datum.getValue())\ndatum.remove(data.orange)\nconsole.log(datum.getValue())\n"},543:function(n,a){n.exports="import { Datum } from 'shineout'\nimport data from './data'\n\nconst datum = new Datum.List({\n  format: d => d.name,\n  onChange(value) { console.log(value) },\n})\n\ndatum.setValue(['blue'])\ndatum.add(data.red)\ndatum.add(data.orange)\ndatum.remove(data.red)\ndatum.clear()\n"},544:function(n,a){n.exports="import { Datum } from 'shineout'\nimport data from './data'\n\nlet datum = new Datum.List({})\ndatum.add(data.red)\nconsole.log(datum.getValue())\n\ndatum = new Datum.List({ format: d => d.name })\ndatum.add(data.red)\nconsole.log(datum.getValue())\n\ndatum = new Datum.List({ format: d => `${d.id}-${d.name}` })\ndatum.add(data.red)\ndatum.add(data.green)\nconsole.log(datum.getValue())\n"},545:function(n,a){n.exports="import { Datum } from 'shineout'\nimport data from './data'\n\nconst datum = new Datum.List({\n  format: 'name',\n  separator: ',',\n  prediction: (val, d) => val === d.name,\n  value: 'blue',\n  onChange: (values) => {\n    console.log(values)\n  },\n})\ndatum.add(data.orange)\ndatum.add(data.green)\ndatum.remove(data.green)\ndatum.clear()\ndatum.setValue('red,violet')\ndatum.add(data.cyan)\n"},546:function(n,a){n.exports="import { Datum } from 'shineout'\nimport data from './data'\n\nconst datum = new Datum.List({\n  disabled: d => d.name === 'blue' || d.name === 'red',\n  format: d => d.name,\n  onChange(value) { console.log(value) },\n})\n\ndatum.setValue(['red'])\ndatum.add([data.orange, data.blue]) // orange, blue\ndatum.remove([data.orange, data.red]) // orange, red\n"},547:function(n,a,e){"use strict";e.r(a);var t=e(1),o=e(20),r=function(n){return console.log(n)},d=new t.g.List({format:"id",value:[2,3],onChange:r});d.add(o.a.red),(d=new t.g.List({format:"name",onChange:r,separator:",",value:"red,yellow"})).add(o.a.blue),d.remove(o.a.yellow),(d=new t.g.List({format:"name",onChange:r,separator:"|",value:"red|yellow"})).add(o.a.cyan)},548:function(n,a,e){"use strict";e.r(a);var t=e(1),o=e(20),r=new t.g.List({format:"id",separator:",",prediction:function(n,a){return parseInt(n,10)===a.id},value:"2,3"});r.add(o.a.red),console.log(r.getValue()),r.remove(o.a.orange),console.log(r.getValue())},549:function(n,a,e){"use strict";e.r(a);var t=e(1),o=e(20),r=new t.g.List({format:function(n){return n.name},onChange:function(n){console.log(n)}});r.setValue(["blue"]),r.add(o.a.red),r.add(o.a.orange),r.remove(o.a.red),r.clear()},550:function(n,a,e){"use strict";e.r(a);var t=e(1),o=e(20),r=new t.g.List({});r.add(o.a.red),console.log(r.getValue()),(r=new t.g.List({format:function(n){return n.name}})).add(o.a.red),console.log(r.getValue()),(r=new t.g.List({format:function(n){return n.id+"-"+n.name}})).add(o.a.red),r.add(o.a.green),console.log(r.getValue())},551:function(n,a,e){"use strict";e.r(a);var t=e(1),o=e(20),r=new t.g.List({format:"name",separator:",",prediction:function(n,a){return n===a.name},value:"blue",onChange:function(n){console.log(n)}});r.add(o.a.orange),r.add(o.a.green),r.remove(o.a.green),r.clear(),r.setValue("red,violet"),r.add(o.a.cyan)},552:function(n,a,e){"use strict";e.r(a);var t=e(1),o=e(20),r=new t.g.List({disabled:function(n){return"blue"===n.name||"red"===n.name},format:function(n){return n.name},onChange:function(n){console.log(n)}});r.setValue(["red"]),r.add([o.a.orange,o.a.blue]),r.remove([o.a.orange,o.a.red])},933:function(n,a,e){"use strict";e.r(a);var t=e(0),o=e.n(t),r=e(7),d=e(6),u=e(40),i=e(2),l=e(253),m=e.n(l),s=e(252),c=e.n(s),g=Object(i.a)(m.a,c.a),f=[];u.a.start(),u.a.setType("disabled"),e(552),u.a.setType("example"),e(551),u.a.setType("format"),e(550),u.a.setType("onchange"),e(549),u.a.setType("prediction"),e(548),u.a.setType("separator"),e(547);var p=u.a.end(),v={disabled:{text:e(546),log:p.disabled},example:{text:e(545),log:p.example},format:{text:e(544),log:p.format},onchange:{text:e(543),log:p.onchange},prediction:{text:e(542),log:p.prediction},separator:{text:e(541),log:p.separator}};a.default=Object(r.a)(function(n){return o.a.createElement(d.b,Object.assign({},n,{codes:v,source:g,examples:f}))})}}]);