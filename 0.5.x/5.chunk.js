(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{232:function(e,n){e.exports="# Card\n\n<example />\n\n# API"},233:function(e,n){e.exports="# Card *卡片*\n\n<example />\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| className | string | 无 | 扩展className |\n| collapsible | bool | false | 是否可折叠 |\n| collapsed | bool | 无 | 是否折叠，用于受控状态 |\n| defaultCollapsed | bool | true | 初始折叠状态（仅在 collapsible 为 true 时有效） |\n| shadow | \\[true, false, 'hover'] | false | 是否显示阴影<br />'hover' - 鼠标移到元素上显示<br />true - 总是显示<br />false - 从不显示 |\n| style | object | 无 | 最外层扩展样式 |\n\n<br />\n\n#### Card.Header, Card.Body, Card.Footer\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| className | string | 无 | 扩展className |\n| style | object | 无 | 最外层扩展样式 |\n\n<br />\n\n### Card.Accordion\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| active | number | 无 | 打开的索引，全关闭时为 -1，用于受控状态 |\n| defaultActive | number | 0 | 默认打开的索引，用于非受控状态 |\n| onChange | function | 无 | 面板打开回调 |\n\n<br />\n\n#### Card.Submit\n\n同 [Button](#/components/Button)"},379:function(e,n){e.exports="/**\n * cn - 手风琴\n *    -- 使用 Card.Accordion 可以使一组 Card 实现手风琴效果（每次打开一个 Card）\n * en - Accordion\n */\nimport React from 'react'\nimport { Card } from 'shineout'\n\nexport default function () {\n  return (\n    <Card.Accordion defaultActive={1}>\n      <Card>\n        <Card.Header>Header 1</Card.Header>\n        <Card.Body>Body</Card.Body>\n      </Card>\n      <Card>\n        <Card.Header>Header 2</Card.Header>\n        <Card.Body>Body</Card.Body>\n      </Card>\n      <Card>\n        <Card.Header>Header 3</Card.Header>\n        <Card.Body>Body</Card.Body>\n      </Card>\n    </Card.Accordion>\n  )\n}\n\n"},380:function(e,n,a){"use strict";a.r(n);var r=a(0),t=a.n(r),d=a(1);n.default=function(){return t.a.createElement(d.d.Accordion,{defaultActive:1},t.a.createElement(d.d,null,t.a.createElement(d.d.Header,null,"Header 1"),t.a.createElement(d.d.Body,null,"Body")),t.a.createElement(d.d,null,t.a.createElement(d.d.Header,null,"Header 2"),t.a.createElement(d.d.Body,null,"Body")),t.a.createElement(d.d,null,t.a.createElement(d.d.Header,null,"Header 3"),t.a.createElement(d.d.Body,null,"Body")))}},381:function(e,n){e.exports="/**\n * cn - 折叠\n * en - Collapse\n */\nimport React from 'react'\nimport { Card, DatePicker } from 'shineout'\n\nexport default function () {\n  return (\n    <Card collapsible>\n      <Card.Header>Header</Card.Header>\n\n      <Card.Body>\n        <div style={{ height: 100 }}><DatePicker /></div>\n      </Card.Body>\n    </Card>\n  )\n}\n\n"},382:function(e,n,a){"use strict";a.r(n);var r=a(0),t=a.n(r),d=a(1);n.default=function(){return t.a.createElement(d.d,{collapsible:!0},t.a.createElement(d.d.Header,null,"Header"),t.a.createElement(d.d.Body,null,t.a.createElement("div",{style:{height:100}},t.a.createElement(d.f,null))))}},383:function(e,n){e.exports='/**\n * cn - 表单\n *    -- Card.Submit 可以用来触发 Card 内部表单提交\n * en - Form\n */\nimport React from \'react\'\nimport { Card, Form, Input } from \'shineout\'\n\nexport default function () {\n  return (\n    <Card style={{ width: 500 }}>\n      <Card.Header>Header</Card.Header>\n\n      <Card.Body>\n        <br />\n        <Form onSubmit={(data) => { console.log(data) }}>\n          <Form.Item label="User name">\n            <Input name="name" defaultValue="user" />\n          </Form.Item>\n\n          <Form.Item label="Email">\n            <Input name="email" defaultValue="test@example.com" />\n          </Form.Item>\n        </Form>\n      </Card.Body>\n\n      <Card.Footer align="right">\n        <Card.Submit>Submit</Card.Submit>\n      </Card.Footer>\n    </Card>\n  )\n}\n\n'},384:function(e,n,a){"use strict";a.r(n);var r=a(0),t=a.n(r),d=a(1);n.default=function(){return t.a.createElement(d.d,{style:{width:500}},t.a.createElement(d.d.Header,null,"Header"),t.a.createElement(d.d.Body,null,t.a.createElement("br",null),t.a.createElement(d.i,{onSubmit:function(e){console.log(e)}},t.a.createElement(d.i.Item,{label:"User name"},t.a.createElement(d.m,{name:"name",defaultValue:"user"})),t.a.createElement(d.i.Item,{label:"Email"},t.a.createElement(d.m,{name:"email",defaultValue:"test@example.com"})))),t.a.createElement(d.d.Footer,{align:"right"},t.a.createElement(d.d.Submit,null,"Submit")))}},385:function(e,n){e.exports="/**\n * cn - 阴影\n *    -- 可以通过 shadow 属性控制阴影\n * en - BoxShadow\n */\nimport React from 'react'\nimport { Card } from 'shineout'\n\nconst cardStyle = {\n  width: 140, display: 'inline-flex', marginRight: 20,\n}\n\nexport default function () {\n  return (\n    <div>\n      <Card style={cardStyle}>\n        <Card.Body>Never</Card.Body>\n      </Card>\n\n      <Card style={cardStyle} shadow=\"hover\">\n        <Card.Body>Hover</Card.Body>\n      </Card>\n\n      <Card style={cardStyle} shadow>\n        <Card.Body>Always</Card.Body>\n      </Card>\n    </div>\n  )\n}\n\n"},386:function(e,n,a){"use strict";a.r(n);var r=a(0),t=a.n(r),d=a(1),o={width:140,display:"inline-flex",marginRight:20};n.default=function(){return t.a.createElement("div",null,t.a.createElement(d.d,{style:o},t.a.createElement(d.d.Body,null,"Never")),t.a.createElement(d.d,{style:o,shadow:"hover"},t.a.createElement(d.d.Body,null,"Hover")),t.a.createElement(d.d,{style:o,shadow:!0},t.a.createElement(d.d.Body,null,"Always")))}},387:function(e,n){e.exports="/**\n * cn - 基本用法\n * en - Base\n */\nimport React from 'react'\nimport { Card } from 'shineout'\n\nconst cardStyle = {\n  width: 240, height: 300, display: 'inline-flex', marginRight: 20,\n}\nconst gray = { background: '#f7f7f7' }\n\nexport default function () {\n  return (\n    <div>\n      <Card style={cardStyle}>\n        <Card.Header>Header</Card.Header>\n        <Card.Body>Body</Card.Body>\n        <Card.Footer>Footer</Card.Footer>\n      </Card>\n\n      <Card style={cardStyle}>\n        <Card.Header style={gray}>Header</Card.Header>\n        <Card.Body>Body</Card.Body>\n        <Card.Footer style={gray}>Footer</Card.Footer>\n      </Card>\n    </div>\n  )\n}\n\n"},388:function(e,n,a){"use strict";a.r(n);var r=a(0),t=a.n(r),d=a(1),o={width:240,height:300,display:"inline-flex",marginRight:20},l={background:"#f7f7f7"};n.default=function(){return t.a.createElement("div",null,t.a.createElement(d.d,{style:o},t.a.createElement(d.d.Header,null,"Header"),t.a.createElement(d.d.Body,null,"Body"),t.a.createElement(d.d.Footer,null,"Footer")),t.a.createElement(d.d,{style:o},t.a.createElement(d.d.Header,{style:l},"Header"),t.a.createElement(d.d.Body,null,"Body"),t.a.createElement(d.d.Footer,{style:l},"Footer")))}},923:function(e,n,a){"use strict";a.r(n);var r=a(0),t=a.n(r),d=a(7),o=a(6),l=a(2),c=a(233),i=a.n(c),m=a(232),u=a.n(m),s=Object(l.a)(i.a,u.a),C=[{name:"1-base",title:Object(l.a)("基本用法","Base"),component:a(388).default,rawText:a(387)},{name:"2-boxshadow",title:Object(l.a)("阴影 \n 可以通过 shadow 属性控制阴影","BoxShadow"),component:a(386).default,rawText:a(385)},{name:"3-form",title:Object(l.a)("表单 \n Card.Submit 可以用来触发 Card 内部表单提交","Form"),component:a(384).default,rawText:a(383)},{name:"4-collapse",title:Object(l.a)("折叠","Collapse"),component:a(382).default,rawText:a(381)},{name:"5-accordion",title:Object(l.a)("手风琴 \n 使用 Card.Accordion 可以使一组 Card 实现手风琴效果（每次打开一个 Card）","Accordion"),component:a(380).default,rawText:a(379)}];n.default=Object(d.a)(function(e){return t.a.createElement(o.b,Object.assign({},e,{codes:void 0,source:s,examples:C}))})}}]);