webpackJsonpShineoutDoc([4],{254:function(e,t,n){"use strict";t.b=h,n.d(t,"a",function(){return m});var r=n(10),a=n(15),i=n(74),o=n(77),d=n(78),s=n(79),l=n(76),c=n(75),u=1e4,f=[];!function(){for(var e=Object(i.b)(l.a,20),t=Object(i.b)(c.a,30),n=Object(i.b)(c.a,5),r=1;r<=u;r++)f.push({id:r,firstName:Object(i.a)(o.a),lastName:Object(i.a)(d.a),position:Object(i.a)(s.a),start:Object(i.c)("yyyy-MM-dd",432e9),time:Object(i.c)("hh:mm"),salary:Object(i.d)(5e5,5e4),country:Object(i.a)(e),office:Object(i.a)(t),office5:Object(i.a)(n),height:Object(i.e)(14,100)});for(var a=[],h=0;h<=o.a.length;h+=3)a.push(o.a[h])}();function h(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=arguments.length>3?arguments[3]:void 0,o=r.name,d=r.order;switch(o){case"id":case"salary":e="asc"===d?function(e,t){return e[o]-t[o]}:function(e,t){return t[o]-e[o]};break;default:o&&(e="asc"===d?function(e,t){return e[o].localeCompare(t[o])}:function(e,t){return t[o].localeCompare(e[o])})}var s=e?Object(a.a)(f,function(t){return t.sort(e)}):f;return i&&(i=i.toLocaleLowerCase(),s=s.filter(function(e){return"".concat(e.firstName," ").concat(e.lastName).toLocaleLowerCase().indexOf(i)>=0})),s.slice(n,n+t)}var m={get:function(e,t){var n=t.current,r=void 0===n?1:n,a=t.pageSize,o=void 0===a?100:a,d=t.sorter,s=t.username,l=(r-1)*o;return new Promise(function(e){setTimeout(function(){e({status:1,data:h(o,l,d,s),current:r,pageSize:o,total:f.length})},Object(i.d)(500,300))})},post:function(e,t){var n=t.op,a=t.ids;return new Promise(function(e){switch(n){case"delete":f=f.filter(function(e){return a.indexOf(e.id)<0});break;case"on":case"off":f.forEach(function(e,t){a.indexOf(e.id)>=0&&(f[t]=Object(r.a)({},e,{status:"on"===n}))})}setTimeout(function(){e(!0)},Object(i.d)(200))})}}},845:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(73),o=n(72),d=n(44),s=n(846),l=n.n(s),c=n(847),u=n.n(c),f=Object(d.a)(l.a,u.a),h=[{name:"01-base",title:Object(d.a)("基本用法 \n 基础的表格用法。推荐 columns 写为常量，以提升性能。","Base \n Basic table usage."),component:n(848).default,rawText:n(849)},{name:"02-style",title:Object(d.a)("边框和底纹 \n 通过 striped 显示交错底纹；通过 bordered 显示边框。","Style \n Set striped to add zebra-striping; Set bordered to add borders."),component:n(850).default,rawText:n(851)},{name:"03-small",title:Object(d.a)("紧凑表格 \n 设置 size 为 small 显示紧凑表格","Small table \n Set size to small to display the compact form."),component:n(852).default,rawText:n(853)},{name:"04-column-group",title:Object(d.a)("表头分组 \n Table 会自动合并相邻相同 group 的表头","Column group \n Table automatically merges headers with adjacent and identical groups."),component:n(854).default,rawText:n(855)},{name:"06-fixed-header",title:Object(d.a)("固定表头 \n 设置 fixed 属性为 'both' 或 'y'，可以固定表头，需要设置整个表格的高度","Fixed head \n Set the fixed property to 'both' or 'y' can fix the table header. You need to set the height of the entire table."),component:n(856).default,rawText:n(857)},{name:"07-fixed-column-1",title:Object(d.a)("固定列 \n 设置 column 的 fixed 属性，可以固定列。只在设置了表格的 width 属性，并且 width 大于外部容器情况下才会生效","Fixed column \n Set the fixed property of the column can fix the column; Only take effect if the table's width property is set and width is greater than the external container."),component:n(858).default,rawText:n(859)},{name:"07-fixed-column-2",title:Object(d.a)(" \n 示例：只固定右侧列"," \n Example: Only fix the right column."),component:n(860).default,rawText:n(861)},{name:"08-bigdata",title:Object(d.a)("性能 \n Table内部对大量数据的渲染做了lazy render的优化。这个例子加载了10000条，55列数据。可以通过设置rowsInView调整单次最多render的行数，默认为20","Performance \n The rendering of large amounts of data in the Table has been optimized by lazy render. This example loads 10000 pieces and 55 columns of data. \n You can set rowsInView property to change the number of rows in rendering. The default value is 20."),component:n(862).default,rawText:n(863)},{name:"09-loading",title:Object(d.a)("加载中 \n 设置 loading 属性可以将表格状态设置为加载中","Loading \n Set the loading property can set the table state to loading."),component:n(864).default,rawText:n(865)},{name:"10-sort",title:Object(d.a)("排序 \n 设置 column 的 sorter 属性标示此列需要排序 \n sorter 返回一个 sort 函数时，使用这个函数对数据进行内部排序 \n 后端或自行排序用户自行处理，sroter 函数不要返回结果","Sorter \n Set the sorter property of column to indicate that this column can be sorted. \n When the sorter returns a function, use this function to sort data internally. \n Server-side or self-sorting is is handled by the user, do not return results."),component:n(866).default,rawText:n(867)},{name:"11-pagination",title:Object(d.a)("前端分页 \n 设置 pagination 显示分页，没有设置 onChange 处理数据的情况下，会自动对数据进行分页 \n pagination 的参数和 Pagination 组件一致","Pagination (frontend) \n Set the pagination property to show the pagination and if not set onChange property, the data is automatically paged. \n The parameters of pagination are consistent with the Pagination component."),component:n(868).default,rawText:n(869)},{name:"12-pagination",title:Object(d.a)("服务端分页 \n 在 pagination 的 onChange 中处理（获取）数据，可以实现服务端分页","Pagination (server) \n Processing (acquiring) data in pagination's onChange realizes the pagination of server-side."),component:n(870).default,rawText:n(871)},{name:"12-scroll",title:Object(d.a)("滚动加载 \n onScroll 事件会返回当前滚动条位置 (float 类型，[0,1])，可以据此实现滚动加载数据","onScroll \n The onScroll event returns the current position(float,[0,1]) of the scroll bar."),component:n(872).default,rawText:n(873)},{name:"13-merge-cell",title:Object(d.a)("合并行/列 \n 设置 column 的 rowSpan 可以合并行，rowSpan 为函数，会传入相邻的两行数据，根据此函数返回结果(bool)判断是否合并行 \n 设置 column 的 colSpan 可以合并列，colSpan 为函数，传入参数为当前行数据，函数返回结果为需要向后合并的列数，不合并返回 1 \n 一个单元格同时指定了rowSpan和colSpan时，如果两行的colSpan计算结果不同，这两行不会合并","rowSpan & colSpan \n - Set column's rowSpan property to merge rows. The rowSpan property is a function that passed in two adjacent rows of data and determine whether to merge or not. \n - Set column's colSpan property to merge columns. The colSpan property is a function that passed in current row of data and the result returned by this function is as the number of columns that need to be merged. \n - When a cell specifies both rowSpan and colSpan, if the colSpan's calculation results of the two rows are different, the two rows will not be merged."),component:n(874).default,rawText:n(875)},{name:"14-merge-cell",title:Object(d.a)(" \n 示例：不带分页的合并行/列"," \n Example: Merged rows/columns without pagination."),component:n(876).default,rawText:n(877)},{name:"15-select-1",title:Object(d.a)("选择行 \n 设置 onRowChange 属性，会自动添加选择列","Select \n Set the onRowChange property will automatically add a column with checkbox."),component:n(878).default,rawText:n(879)},{name:"15-select-format",title:Object(d.a)("选择行 (format) \n 使用 format，可以格式化返回的数据","Select (format) \n Set format property to format the returned value."),component:n(880).default,rawText:n(881)},{name:"16-select-datum",title:Object(d.a)("选择行 (Datum) \n 使用 Datum，可以做更复杂的数据处理的工作","Select (datum) \n Using Datum.List can process more complex data."),component:n(882).default,rawText:n(883)},{name:"17-select-disabled",title:Object(d.a)("选择行（禁用） \n 设置 disabled 属性，禁用选项。","Select (disabled) \n Set disabled to disable the selection."),component:n(884).default,rawText:n(885)},{name:"18-select",title:Object(d.a)("选择行 (分页) \n 默认情况下，翻页时 Datum 对象会保留当前选中的数据","Select (paging) \n By default, the Datum object retains the currently selected data when the page is changed."),component:n(886).default,rawText:n(887)},{name:"19-select",title:Object(d.a)(" \n 如果需要翻页时清除选中数据，可以在翻页时调用 Datum.clear() 方法"," \n If you need to clear the selected data when the page is changed, you can clear value property or call the Datum.clear() method."),component:n(888).default,rawText:n(889)},{name:"20-select",title:Object(d.a)("选择行 (示例) \n 可以不处理 onChange 事件，在调用时使用 datum.getValue 获取当前选中值。","Select (getValue) \n You can use datum.getValue to get current selected values."),component:n(890).default,rawText:n(891)},{name:"21-expand",title:Object(d.a)("可展开 \n 需要展开行时，可以增加一个 type 为 'expand' 的 column，render 函数返回函数时，表示此行可以展开，内容为此函数返回结果","Expand \n Add a column with type 'expand' and the render function returns a function, that means the row can be expanded. The content is the result returned by this function."),component:n(892).default,rawText:n(893)},{name:"22-scroll-to-index",title:Object(d.a)("滚动 \n 固定表头的表格提供了一个 scrollToIndex 方法滚动到指定行，因为非固定行高的原因，滚动到未渲染过的行有一定偏差，请谨慎使用。","scrollToIndex \n The table of the fixed header provides a scrollToIndex method to scroll to the specified line. Because of the row height is not fixed, scrolling to the unrendered line has a little deviation. Please use it with caution."),component:n(894).default,rawText:n(895)},{name:"23-row-classname",title:Object(d.a)("行样式 \n 通过 rowClassName 设置单行样式（使用了 rowClassName 必须给 td 指定背景色）","Row ClassName \n Set the rowClassName property to set row style. (You must specify td background-color when the rowClassName is set)"),component:n(896).default,rawText:n(897)},{name:"99-raw",title:Object(d.a)("只使用样式 \n 使用原生的tr, td来显示表格","Style only \n Use the native tr and td to display the table."),component:n(898).default,rawText:n(899)}];t.default=Object(i.a)(function(e){return a.a.createElement(o.b,Object.assign({},e,{codes:void 0,source:f,examples:h}))})},846:function(e,t){e.exports="# Table *表格*\n\n<example />\n\n## API \n\n### Table\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| bordered | bool | false | 是否显示外边框 |\n| className | string | 无 | 扩展className |\n| columns | Column\\[] | 无 | 数组，见Column |\n| data | object\\[] | 无 | 数据 |\n| datum | object | 无 | 如果 format 和 prediction 属性无法满足需求，可以传入一个 [Datum.List](#/components/Datum.List) 对象，或者 Datum.List 配置来处理数据。 |\n| disabled | bool \\| function | false | 如果 disabled 为 true，禁用全部选项，如果 disabled 为函数，根据函数反回结果禁用选项 |\n| fixed | string | 无 | 可填值 \\['both', 'x', 'y'] \n| format | string \\| function | d => d | 格式化 value<br />默认值，返回原始数据<br />为string时，会作为key从原始数据中获取值，相当于 (d) => d[format]<br /> 为函数时，以函数返回结果作为 value |\n| loading | bool \\| element | false | 数据加载中，为true时会展示一个默认的[Spin](#/components/Spin)组件，可以传入一个自定义的Spin代替 |\n| keygen | string \\| function(obj):string \\| true | 必填 | 生成每一项key的辅助方法<br />为 true 时，以数据项本身作为key，相当于 (d => d)<br />为函数时，使用此函数返回值<br />为string时，使用这个string对应的数据值。如 'id'，相当于 (d => d.id) |\n| onScroll | function(x, y) | 无 | 滚动条滚动后回调函数；<br />x: 横向滚动比(0 <= x <= 1)<br />y: 纵向滚动比(0 <= y <= 1) |\n| onRowSelect | function(rows) | 无 | 选择行。rows为选中的数据。如果需要数据需要格式化的处理，建议使用 datum |\n| prediction | function | (val, d) => val===format(d) | 默认使用 format 函数执行的结果来比较是否匹配，在某些情况下（例如返回原始数据的对象，更新数据时，生成了一个值相同，非同一个对象的选项），需要借助 prediction 函数来判断是否匹配 |\n| rowClassName | function(record, index) | 无 | 指定单行className |\n| rowHeight | number | 40 | 单行表格的预期高度，只是一个大概的估值，用来展示滚动条 |\n| rowsInView | number | 20 | 单次render的最大行数。Table 采用了lazy render的方式来优化在大量数据下的性能，如果你的表格显示的高度超出了20条，可以调整rowsInView的值 |\n| showSelectAll | bool | true | 是否显示全选 |\n| striped | bool | false | 是否显示交错斑马底纹 |\n| style | object | 无 | 扩展样式 |\n| value | array | 无 | 当前选中值，格式和 onRowSelect 返回值一致 |\n| virticalAlign | string | 'top' | 单元格内容垂直对齐方式，可选值为 ['top', 'middle'] |\n\n### Column\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| colSpan | function(row) | 无 | 合并列控制函数，row为单行数据，返回值一个整数，标明需要合并的列数 |\n| fixed | string | 无 | 可选\\['left', 'right']；<br />需要设置Table的fixed为'x'或'both'才生效；<br />如果相邻的多列需要锁定，只需指定最外侧的column即可 |\n| group | string \\| string\\[] | 无 | 表头分组，相邻的相同 group 会生成一个新的表头 |\n| key | string \\| number | 无 | 列的key，默认使用index |\n| render | string \\| function(d,i) | 必填 | 表格内容生成函数；<br />d: 当前行数据<br />i: 当前行索引<br />为了使用方便，可以传入一个数据的key，如 'id'，相当于 (d) => { return d.id }\n| rowSpan | function(a, b) | 无 | 根据函数返回的结果（bool）判断是否合并行，a、b为相邻的两行数据。 |\n| sorter | function(order) | 无 | sorter 不为空时，这一列会出现排序 icon。order的值为\\['asc', 'desc']<br />前端排序，返回一个排序函数，参考 Array.sort。<br />服务端排序，不要返回值，自行处理即可。\n| title | string \\| ReactElement \\| function | 无 | 表头显示内容 |\n| type | string | 无 | 特殊用途列，可选值为 \\['expand', 'checkbox']<br />expand: 行展开列，render 函数返回函数时，表示此行可以展开，内容为此函数返回结果<br />checkbox: 选择列，用于仅固定选择列的场景 |\n| width | number | 无 | 列宽 |"},847:function(e,t){e.exports="# Table\n\n<example />\n\n## API \n\n### Table\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| bordered | bool | false | Whether to display the border |\n| className | string | - | extend className |\n| columns | Column\\[] | - | array，见Column |\n| data | object\\[] | - | data |\n| datum | object | - | If the format and prediction does not satisfied your requirements, you can pass in a [Datum.List](#/components/Datum.List) object or the Datum.List configuration to process data. |\n| disabled | bool \\| function | false | When the value is true, disabled all checkboxes; When the value is function, disable the checkbox that this function returns true. |\n| fixed | string | - | options:  \\['both', 'x', 'y'] \n| format | string \\| function | d => d | Format value<br />The defaule value is return the original data.<br />When it is a string, the value is fetched from the original data as a key equivalent to (d) => d\\[format]<br />When it is a function, use its return value. |\n| loading | bool \\| element | false | When it is true, a default \\[Spin](#/components/Spin) component will be displayed, a custom loading icon can be passed in to replace. |\n| keygen | string \\| function(obj):string | index | Generate a auxiliary method for each key<br />If not filled, index will be used (not recommended, in some cases there may be problems)<br />When it is a function, use its return value. <br />When it is a string，ues the value of the string.For example, 'id' is the same thing as (d) => d.id . |\n| onScroll | function(x, y) | none | The callback function after scrolling.<br />x: Horizontal rolling ratio(0 <= x <= 1)<br />y: Vertical scroll ratio(0 <= y <= 1) |\n| onRowSelect | function(rows) | none | Select row. Rows is the selected data. |\n| prediction | function | (val, d) => val===format(d) | By default, the result of the format function is used to compare whether it matches. In some cases (for example, whe an object that returns the original data is updated, an different option with the same value  is generated), the prediction function needs to be used to determine whether match |\n| rowClassName | function(record, index) | - | Specify row className |\n| rowHeight | number | 40 | The expected height of a one-line table is just a rough estimate to show the scroll bar. |\n| rowsInView | number | 20 | The maximum number of rows for a single render. Table uses lazy render to optimize performance under large amounts of data. If your table displays more than 20 rows, you can change the value of rowsInView. |\n| showSelectAll | bool | true | Whether to show being fully selected. |\n| striped | bool | false | Whether to display zebra shading. |\n| style | object | - | Container element style |\n| value | array | none | The current selected value. |\n\n### Column\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| colSpan | function(record) | none | The function for controlling to merge columns. The return value is an integer indicating the number of columns that need to be merged。 |\n| fixed | string | - | options: \\['left', 'right']；<br />Need to set the Table's fixed to 'x' or 'both'; |\n| group | string \\| string\\[] | - | The group of header column. |\n| key | string \\| number | none | The key of the column |\n| render | string \\| function(d,i) | required | The generation function for Table content.<br />d: the data of the current row<br />i: the index of the current row <br />For ease of use, you can pass in the key of a data, such as 'id', which is equivalent to (d) => { return d.id } |\n| rowSpan | function(a, b) | none | When it is a function, it is judged whether the rows are merged according to the result (bool) returned by the function, and a and b are two adjacent rows of data. |\n| sorter | function(order) | none | When the sorter is not empty, the sort icon appears in this column. the value of order: \\['asc', 'desc']<br />Front-end sorting returns a sort function, refer to Array.sort.<br />Server-side sorting, do not return values and handle it itself. |\n| title | string \\| ReactElement \\| function(data) | none | The content of the header |\n| type | string | - | Special column, options: \\['expand', 'checkbox']<br />expand: Expand the column. When the render function returns a function, it means that the row can be expanded and the content  is the result returned by this function. <br />checkbox: Select column for scenes with only fixed selection columns |\n| width | number | - | the width of the column |"},848:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(4),s=[{title:"id",render:"id",width:50},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)}},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"},{title:"Start Date",render:"start"},{title:"Salary",render:function(e){return"$".concat(e.salary.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,"))}}];t.default=function(){return a.a.createElement(i.B,{keygen:"id",width:1500,columns:s,data:d})}},849:function(e,t){e.exports="/**\n * cn - 基本用法\n *    -- 基础的表格用法。推荐 columns 写为常量，以提升性能。\n * en - Base\n *    -- Basic table usage.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(4)\n\nconst columns = [\n  { title: 'id', render: 'id', width: 50 },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}` },\n  { title: 'Country', render: 'country' },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n  { title: 'Start Date', render: 'start' },\n  {\n    title: 'Salary',\n    render: d => `$${d.salary.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}`,\n  },\n]\n\nexport default function () {\n  return (\n    <Table\n      keygen=\"id\"\n      width={1500}\n      columns={columns}\n      data={data}\n    />\n  )\n}\n"},850:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(4),s=[{title:"id",render:"id",width:50},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)}},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"}];t.default=function(){return a.a.createElement(i.B,{keygen:"id",striped:!0,bordered:!0,columns:s,data:d})}},851:function(e,t){e.exports="/**\n * cn - 边框和底纹\n *    -- 通过 striped 显示交错底纹；通过 bordered 显示边框。\n * en - Style\n *    -- Set striped to add zebra-striping; Set bordered to add borders.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(4)\n\nconst columns = [\n  { title: 'id', render: 'id', width: 50 },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}` },\n  { title: 'Country', render: 'country' },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n]\n\nexport default function () {\n  return (\n    <Table keygen=\"id\" striped bordered columns={columns} data={data} />\n  )\n}\n"},852:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(4),s=[{title:"id",render:"id",width:50},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)}},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"}];t.default=function(){return a.a.createElement(i.B,{keygen:"id",size:"small",columns:s,data:d})}},853:function(e,t){e.exports="/**\n * cn - 紧凑表格\n *    -- 设置 size 为 small 显示紧凑表格\n * en - Small table\n *    -- Set size to small to display the compact form.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(4)\n\nconst columns = [\n  { title: 'id', render: 'id', width: 50 },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}` },\n  { title: 'Country', render: 'country' },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n]\n\nexport default function () {\n  return (\n    <Table keygen=\"id\" size=\"small\" columns={columns} data={data} />\n  )\n}\n"},854:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(4),s=a.a.createElement("span",{style:{background:"#ccc",display:"block",lineHeight:"40px",color:"#fff"}},"Name"),l=a.a.createElement("span",null,"Other"),c=[{title:"id",render:"id",width:50},{title:"First Name",render:"firstName",group:[s,"True Name"]},{title:"Last Name",render:"lastName",group:[s,"True Name"]},{title:"Nick Name",render:function(){return"nickname"},group:s},{title:"Country",render:"country"},{title:"Office",render:"office",group:l},{title:"Position",render:"position",group:l}];t.default=function(){return a.a.createElement(i.B,{bordered:!0,keygen:"id",columns:c,data:d})}},855:function(e,t){e.exports="/**\n * cn - 表头分组\n *    -- Table 会自动合并相邻相同 group 的表头\n * en - Column group\n *    -- Table automatically merges headers with adjacent and identical groups.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(4)\nconst name = (\n  <span\n    style={{\n      background: '#ccc',\n      display: 'block',\n      lineHeight: '40px',\n      color: '#fff',\n    }}\n  >\n    Name\n  </span>\n)\n\nconst other = <span>Other</span>\n\nconst columns = [\n  { title: 'id', render: 'id', width: 50 },\n  { title: 'First Name', render: 'firstName', group: [name, 'True Name'] },\n  { title: 'Last Name', render: 'lastName', group: [name, 'True Name'] },\n  { title: 'Nick Name', render: () => 'nickname', group: name },\n  { title: 'Country', render: 'country' },\n  { title: 'Office', render: 'office', group: other },\n  { title: 'Position', render: 'position', group: other },\n]\n\nexport default function () {\n  return (\n    <Table\n      bordered\n      keygen=\"id\"\n      columns={columns}\n      data={data}\n    />\n  )\n}\n"},856:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(20),s=[{title:"id",render:"id",width:50},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)}},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"},{title:"Start Date",render:"start"},{title:"Salary",render:function(e){return"$".concat(e.salary.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,"))}}];t.default=function(){return a.a.createElement("div",null,a.a.createElement(i.B,{fixed:"both",keygen:"id",width:1500,height:300,columns:s,data:d}),a.a.createElement(i.B,{fixed:"y",data:d,keygen:"id",style:{height:300},columns:s.slice(0,4)}))}},857:function(e,t){e.exports="/**\n * cn - 固定表头\n *    -- 设置 fixed 属性为 'both' 或 'y'，可以固定表头，需要设置整个表格的高度\n * en - Fixed head\n *    -- Set the fixed property to 'both' or 'y' can fix the table header. You need to set the height of the entire table.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(20)\n\nconst columns = [\n  { title: 'id', render: 'id', width: 50 },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}` },\n  { title: 'Country', render: 'country' },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n  { title: 'Start Date', render: 'start' },\n  {\n    title: 'Salary',\n    render: d => `$${d.salary.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}`,\n  },\n]\n\nexport default function () {\n  return (\n    <div>\n      <Table\n        fixed=\"both\"\n        keygen=\"id\"\n        width={1500}\n        height={300}\n        columns={columns}\n        data={data}\n      />\n      <Table\n        fixed=\"y\"\n        data={data}\n        keygen=\"id\"\n        style={{ height: 300 }}\n        columns={columns.slice(0, 4)}\n      />\n    </div>\n  )\n}\n"},858:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(20),s=[{title:"id",render:"id",width:50},{title:"First Name",group:"Name",render:"firstName",width:120},{title:"Last Name",fixed:"left",group:"Name",render:"lastName",width:120},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"},{title:"Start Date",render:"start"},{title:"Salary",fixed:"right",width:100,render:function(e){return"$".concat(e.salary.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,"))}}];t.default=function(){return a.a.createElement(i.B,{bordered:!0,fixed:"both",keygen:"id",width:1500,style:{height:300},columns:s,data:d})}},859:function(e,t){e.exports="/**\n * cn - 固定列\n *    -- 设置 column 的 fixed 属性，可以固定列。只在设置了表格的 width 属性，并且 width 大于外部容器情况下才会生效\n * en - Fixed column\n *    -- Set the fixed property of the column can fix the column; Only take effect if the table's width property is set and width is greater than the external container.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(20)\n\nconst columns = [\n  { title: 'id', render: 'id', width: 50 },\n  {\n    title: 'First Name',\n    group: 'Name',\n    render: 'firstName',\n    width: 120,\n  },\n  {\n    title: 'Last Name',\n    fixed: 'left',\n    group: 'Name',\n    render: 'lastName',\n    width: 120,\n  },\n  { title: 'Country', render: 'country' },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n  { title: 'Start Date', render: 'start' },\n  {\n    title: 'Salary',\n    fixed: 'right',\n    width: 100,\n    render: d => `$${d.salary.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}`,\n  },\n]\n\nexport default function () {\n  return (\n    <Table\n      bordered\n      fixed=\"both\"\n      keygen=\"id\"\n      width={1500}\n      style={{ height: 300 }}\n      columns={columns}\n      data={data}\n    />\n  )\n}\n"},860:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(6),s=[{title:"id",render:"id",width:50},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)}},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"},{title:"Date",render:"start",fixed:"right",group:"Start Time",width:120},{title:"Time",render:"time",group:"Start Time",width:80}];t.default=function(){return a.a.createElement(i.B,{fixed:"x",keygen:"id",width:1500,columns:s,data:d})}},861:function(e,t){e.exports="/**\n * cn -\n *    -- 示例：只固定右侧列\n * en -\n *    -- Example: Only fix the right column.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(6)\n\nconst columns = [\n  { title: 'id', render: 'id', width: 50 },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}` },\n  { title: 'Country', render: 'country' },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n  {\n    title: 'Date',\n    render: 'start',\n    fixed: 'right',\n    group: 'Start Time',\n    width: 120,\n  },\n  {\n    title: 'Time',\n    render: 'time',\n    group: 'Start Time',\n    width: 80,\n  },\n]\n\nexport default function () {\n  return (\n    <Table\n      fixed=\"x\"\n      keygen=\"id\"\n      width={1500}\n      columns={columns}\n      data={data}\n    />\n  )\n}\n"},862:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});for(var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(1e4),s=[{title:"id",render:"id",width:80},{title:"Name",fixed:"left",render:function(e){return a.a.createElement("div",{style:{height:e.height}},e.firstName," ",e.lastName)},width:160},{title:"Country",render:"country",width:200},{title:"Position",render:"position"},{title:"Office",render:"office"},{title:"Start Date",render:"start",width:140}],l=0;l<50;l++)s.push({title:"".concat(l+1),render:function(e){return"$".concat(e.salary.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,"))}});t.default=function(){return a.a.createElement(i.B,{fixed:"both",keygen:"id",width:6400,style:{height:600},columns:s,data:d,rowsInView:10})}},863:function(e,t){e.exports="/**\n * cn - 性能\n *    -- Table内部对大量数据的渲染做了lazy render的优化。这个例子加载了10000条，55列数据。可以通过设置rowsInView调整单次最多render的行数，默认为20\n * en - Performance\n *    -- The rendering of large amounts of data in the Table has been optimized by lazy render. This example loads 10000 pieces and 55 columns of data.\n *    -- You can set rowsInView property to change the number of rows in rendering. The default value is 20.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(10000)\nconst columns = [\n  { title: 'id', render: 'id', width: 80 },\n  {\n    title: 'Name',\n    fixed: 'left',\n    render: d => <div style={{ height: d.height }}>{d.firstName} {d.lastName}</div>,\n    width: 160,\n  },\n  { title: 'Country', render: 'country', width: 200 },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n  { title: 'Start Date', render: 'start', width: 140 },\n]\n\nfor (let i = 0; i < 50; i++) {\n  columns.push({\n    title: `${i + 1}`,\n    render: d => `$${d.salary.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}`,\n  })\n}\n\nexport default function () {\n  return (\n    <Table\n      fixed=\"both\"\n      keygen=\"id\"\n      width={6400}\n      style={{ height: 600 }}\n      columns={columns}\n      data={data}\n      rowsInView={10}\n    />\n  )\n}\n"},864:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(8),s=[{title:"id",render:"id",width:50},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)}},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"}];t.default=function(){var e=a.a.createElement(i.z,{color:"#1890ff",name:"ring"});return a.a.createElement(i.B,{keygen:"id",loading:e,columns:s,data:d})}},865:function(e,t){e.exports="/**\n * cn - 加载中\n *    -- 设置 loading 属性可以将表格状态设置为加载中\n * en - Loading\n *    -- Set the loading property can set the table state to loading.\n */\nimport React from 'react'\nimport { Table, Spin } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(8)\n\nconst columns = [\n  { title: 'id', render: 'id', width: 50 },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}` },\n  { title: 'Country', render: 'country' },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n]\n\nexport default function () {\n  const loading = <Spin color=\"#1890ff\" name=\"ring\" />\n\n  return (\n    <Table keygen=\"id\" loading={loading} columns={columns} data={data} />\n  )\n}\n"},866:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(1e3),s=[{title:"id",render:"id",width:80,sorter:function(e){return function(t,n){return"asc"===e?t.id-n.id:n.id-t.id}}},{title:"Name",fixed:"left",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)},width:160,sorter:function(e){return function(t,n){return"asc"===e?t.firstName.localeCompare(n.firstName):n.firstName.localeCompare(t.firstName)}}},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"},{title:"Start Date",render:"start"}];t.default=function(){return a.a.createElement(i.B,{fixed:"both",keygen:"id",striped:!0,width:1200,style:{maxHeight:400},columns:s,data:d,rowsInView:10})}},867:function(e,t){e.exports="/**\n * cn - 排序\n *    -- 设置 column 的 sorter 属性标示此列需要排序\n *    -- sorter 返回一个 sort 函数时，使用这个函数对数据进行内部排序\n *    -- 后端或自行排序用户自行处理，sroter 函数不要返回结果\n * en - Sorter\n *    -- Set the sorter property of column to indicate that this column can be sorted.\n *    -- When the sorter returns a function, use this function to sort data internally.\n *    -- Server-side or self-sorting is is handled by the user, do not return results.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(1000)\nconst columns = [\n  {\n    title: 'id',\n    render: 'id',\n    width: 80,\n    sorter: order => (a, b) => {\n      if (order === 'asc') return a.id - b.id\n      return b.id - a.id\n    },\n  },\n  {\n    title: 'Name',\n    fixed: 'left',\n    render: d => `${d.firstName} ${d.lastName}`,\n    width: 160,\n    sorter: order => (a, b) => {\n      if (order === 'asc') return a.firstName.localeCompare(b.firstName)\n      return b.firstName.localeCompare(a.firstName)\n    },\n  },\n  { title: 'Country', render: 'country' },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n  { title: 'Start Date', render: 'start' },\n]\n\nexport default function () {\n  return (\n    <Table\n      fixed=\"both\"\n      keygen=\"id\"\n      striped\n      width={1200}\n      style={{ maxHeight: 400 }}\n      columns={columns}\n      data={data}\n      rowsInView={10}\n    />\n  )\n}\n"},868:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return h});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(0),l=n.n(s),c=n(26),u=n(254),f=Object(u.b)(1e3),h=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).handlePageChange=function(e){n.setState({current:e})},n.state={current:1},n.columns=[{title:"id",render:"id",width:70,sorter:function(e){return n.handlePageChange(1),function(t,n){return"asc"===e?t.id-n.id:n.id-t.id}}},{title:"First Name",group:"Name",render:"firstName",width:100},{title:"Last Name",fixed:"left",group:"Name",render:"lastName",width:120,sorter:function(e){return n.handlePageChange(1),function(t,n){return"asc"===e?t.lastName.localeCompare(n.lastName):n.lastName.localeCompare(t.lastName)}}},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"},{title:"Start Date",render:"start"},{title:"Salary",fixed:"right",width:100,render:function(e){return"$".concat(e.salary.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,"))}}],n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"render",value:function(){return l.a.createElement(c.B,{data:f,fixed:"x",keygen:"id",width:1500,columns:this.columns,pagination:{current:this.state.current,align:"center",layout:["links","list"],onChange:this.handlePageChange,pageSizeList:[10,15,20],text:{page:"/ page"}}})}}]),t}(s.PureComponent)},869:function(e,t){e.exports="/**\n * cn - 前端分页\n *    -- 设置 pagination 显示分页，没有设置 onChange 处理数据的情况下，会自动对数据进行分页\n *    -- pagination 的参数和 Pagination 组件一致\n * en - Pagination (frontend)\n *    -- Set the pagination property to show the pagination and if not set onChange property, the data is automatically paged.\n *    -- The parameters of pagination are consistent with the Pagination component.\n */\nimport React, { PureComponent } from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(1000)\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      current: 1,\n    }\n    this.columns = [\n      {\n        title: 'id',\n        render: 'id',\n        width: 70,\n        sorter: (order) => {\n          this.handlePageChange(1)\n          return (a, b) => {\n            if (order === 'asc') return a.id - b.id\n            return b.id - a.id\n          }\n        },\n      },\n      {\n        title: 'First Name', group: 'Name', render: 'firstName', width: 100,\n      },\n      {\n        title: 'Last Name',\n        fixed: 'left',\n        group: 'Name',\n        render: 'lastName',\n        width: 120,\n        sorter: (order) => {\n          this.handlePageChange(1)\n          return (a, b) => {\n            if (order === 'asc') return a.lastName.localeCompare(b.lastName)\n            return b.lastName.localeCompare(a.lastName)\n          }\n        },\n      },\n      { title: 'Country', render: 'country' },\n      { title: 'Position', render: 'position' },\n      { title: 'Office', render: 'office' },\n      { title: 'Start Date', render: 'start' },\n      {\n        title: 'Salary',\n        fixed: 'right',\n        width: 100,\n        render: d => `$${d.salary.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}`,\n      },\n    ]\n  }\n\n  handlePageChange = (current) => {\n    this.setState({ current })\n  }\n\n  render() {\n    return (\n      <Table\n        data={data}\n        fixed=\"x\"\n        keygen=\"id\"\n        width={1500}\n        columns={this.columns}\n        pagination={{\n          current: this.state.current,\n          align: 'center',\n          layout: ['links', 'list'],\n          onChange: this.handlePageChange,\n          pageSizeList: [10, 15, 20],\n          text: {\n            page: '/ page',\n          },\n        }}\n      />\n    )\n  }\n}\n\n"},870:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return h});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(6),l=n(0),c=n.n(l),u=n(26),f=n(254),h=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).handleSorter=function(e,t){n.setState({sorter:{name:e,order:t},current:1},n.fetchData)},n.handlePageChange=function(e,t){n.setState({current:e,pageSize:t},n.fetchData)},n.fetchData=function(){var e=n.state,t=e.sorter,r=e.current,a=e.pageSize;n.setState({loading:!0}),f.a.get("user",{sorter:t,current:r,pageSize:a}).then(function(e){n.setState({data:e.data,loading:!1,total:e.total})})},n.state={current:1,pageSize:10,total:0},n.columns=[{title:"id",render:"id",width:80,sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"id")},{title:"First Name",group:"Name",render:"firstName",width:100},{title:"Last Name",fixed:"left",group:"Name",render:"lastName",width:120,sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"lastName")},{title:"Country",render:"country"},{title:"Office",render:"office"},{title:"Start Date",render:"start",sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"start")}],n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"componentDidMount",value:function(){this.fetchData()}},{key:"render",value:function(){var e=this.state,t=e.data,n=e.current,r=e.pageSize,a=e.total,i=e.loading;return c.a.createElement(u.B,{bordered:!0,loading:i,data:t,keygen:"id",columns:this.columns,style:{height:450},fixed:"y",pagination:{align:"center",current:n,pageSize:r,layout:["links","list"],onChange:this.handlePageChange,pageSizeList:[10,15,20,100],total:a}})}}]),t}(l.PureComponent)},871:function(e,t){e.exports="/**\n * cn - 服务端分页\n *    -- 在 pagination 的 onChange 中处理（获取）数据，可以实现服务端分页\n * en - Pagination (server)\n *    -- Processing (acquiring) data in pagination's onChange realizes the pagination of server-side.\n */\nimport React, { PureComponent } from 'react'\nimport { Table } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      current: 1,\n      pageSize: 10,\n      total: 0,\n    }\n\n    this.columns = [\n      {\n        title: 'id',\n        render: 'id',\n        width: 80,\n        sorter: this.handleSorter.bind(this, 'id'),\n      },\n      {\n        title: 'First Name', group: 'Name', render: 'firstName', width: 100,\n      },\n      {\n        title: 'Last Name',\n        fixed: 'left',\n        group: 'Name',\n        render: 'lastName',\n        width: 120,\n        sorter: this.handleSorter.bind(this, 'lastName'),\n      },\n      { title: 'Country', render: 'country' },\n      { title: 'Office', render: 'office' },\n      { title: 'Start Date', render: 'start', sorter: this.handleSorter.bind(this, 'start') },\n    ]\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  handleSorter = (name, order) => {\n    this.setState({ sorter: { name, order }, current: 1 }, this.fetchData)\n  }\n\n  handlePageChange = (current, pageSize) => {\n    this.setState({ current, pageSize }, this.fetchData)\n  }\n\n  fetchData = () => {\n    const { sorter, current, pageSize } = this.state\n    this.setState({ loading: true })\n    fetch.get('user', { sorter, current, pageSize }).then((res) => {\n      this.setState({ data: res.data, loading: false, total: res.total })\n    })\n  }\n\n  render() {\n    const {\n      data, current, pageSize, total, loading,\n    } = this.state\n\n    return (\n      <Table\n        bordered\n        loading={loading}\n        data={data}\n        keygen=\"id\"\n        columns={this.columns}\n        style={{ height: 450 }}\n        fixed=\"y\"\n        pagination={{\n          align: 'center',\n          current,\n          pageSize,\n          layout: ['links', 'list'],\n          onChange: this.handlePageChange,\n          pageSizeList: [10, 15, 20, 100],\n          total,\n        }}\n      />\n    )\n  }\n}\n"},872:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return h});var r=n(14),a=n(1),i=n(3),o=n(4),d=n(2),s=n(5),l=n(0),c=n.n(l),u=n(26),f=n(254),h=function(e){function t(e){var n;return Object(a.a)(this,t),(n=Object(o.a)(this,Object(d.a)(t).call(this,e))).handleScroll=function(e,t){1!==t||n.state.loading||n.setState({current:n.state.current+1},n.fetchData)},n.fetchData=function(){var e=n.state,t=e.current,a=e.pageSize;n.setState({loading:!0}),f.a.get("table",{current:t,pageSize:a}).then(function(e){n.setState({data:Object(r.a)(n.state.data).concat(Object(r.a)(e.data)),loading:!1})})},n.state={current:1,pageSize:50,data:[]},n.columns=[{title:"id",render:"id",width:70},{title:"First Name",group:"Name",render:"firstName",width:100},{title:"Last Name",fixed:"left",group:"Name",render:"lastName",width:120},{title:"Country",render:"country"},{title:"Office",render:"office"},{title:"Start Date",render:"start"}],n}return Object(s.a)(t,e),Object(i.a)(t,[{key:"componentDidMount",value:function(){this.fetchData()}},{key:"render",value:function(){var e=this.state,t=e.data,n=e.loading;return c.a.createElement(u.B,{bordered:!0,data:t,loading:n,keygen:"id",columns:this.columns,style:{height:450},fixed:"y",onScroll:this.handleScroll,verticalAlign:"middle"})}}]),t}(l.PureComponent)},873:function(e,t){e.exports="/**\n * cn - 滚动加载\n *    -- onScroll 事件会返回当前滚动条位置 (float 类型，[0,1])，可以据此实现滚动加载数据\n * en - onScroll\n *    -- The onScroll event returns the current position(float,[0,1]) of the scroll bar.\n */\nimport React, { PureComponent } from 'react'\nimport { Table } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      current: 1,\n      pageSize: 50,\n      data: [],\n    }\n\n    this.columns = [\n      { title: 'id', render: 'id', width: 70 },\n      {\n        title: 'First Name', group: 'Name', render: 'firstName', width: 100,\n      },\n      {\n        title: 'Last Name',\n        fixed: 'left',\n        group: 'Name',\n        render: 'lastName',\n        width: 120,\n      },\n      { title: 'Country', render: 'country' },\n      { title: 'Office', render: 'office' },\n      { title: 'Start Date', render: 'start' },\n    ]\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  handleScroll = (left, top) => {\n    if (top === 1 && !this.state.loading) {\n      this.setState({ current: this.state.current + 1 }, this.fetchData)\n    }\n  }\n\n  fetchData = () => {\n    const { current, pageSize } = this.state\n    this.setState({ loading: true })\n    fetch.get('table', { current, pageSize }).then((res) => {\n      this.setState({ data: [...this.state.data, ...res.data], loading: false })\n    })\n  }\n\n  render() {\n    const { data, loading } = this.state\n\n    return (\n      <Table\n        bordered\n        data={data}\n        loading={loading}\n        keygen=\"id\"\n        columns={this.columns}\n        style={{ height: 450 }}\n        fixed=\"y\"\n        onScroll={this.handleScroll}\n        verticalAlign=\"middle\"\n      />\n    )\n  }\n}\n"},874:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return h});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(6),l=n(0),c=n.n(l),u=n(26),f=n(254),h=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).handleSorter=function(e,t){n.setState({sorter:{name:e,order:t},current:1},n.fetchData)},n.handlePageChange=function(e,t){n.setState({current:e,pageSize:t},n.fetchData)},n.fetchData=function(){var e=n.state,t=e.sorter,r=e.current,a=e.pageSize;n.setState({loading:!0}),f.a.get("user",{sorter:t,current:r,pageSize:a}).then(function(e){n.setState({data:e.data,loading:!1,total:e.total})})},n.state={current:1,pageSize:10,total:0,sorter:{name:"start",order:"asc"}},n.columns=[{title:"id",render:"id",width:70,sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"id")},{title:"First Name",group:"Name",render:"firstName"},{title:"Last Name",group:"Name",render:"lastName"},{title:"Start Date",render:"start",sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"start"),rowSpan:function(e,t){return e.start===t.start},colSpan:function(e){var t=parseInt(e.time.slice(0,2),10);return t>21||t<9?2:1}},{title:"Time",render:"time"},{title:"Office",render:"office5",rowSpan:!0}],n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"componentDidMount",value:function(){this.fetchData()}},{key:"render",value:function(){var e=this.state,t=e.data,n=e.current,r=e.pageSize,a=e.total,i=e.loading;return c.a.createElement(u.B,{bordered:!0,loading:i,data:t,keygen:"id",columns:this.columns,pagination:{align:"center",current:n,pageSize:r,layout:["links","list"],onChange:this.handlePageChange,pageSizeList:[10,15,20],total:a}})}}]),t}(l.PureComponent)},875:function(e,t){e.exports="/**\n * cn - 合并行/列\n *    -- 设置 column 的 rowSpan 可以合并行，rowSpan 为函数，会传入相邻的两行数据，根据此函数返回结果(bool)判断是否合并行\n *    -- 设置 column 的 colSpan 可以合并列，colSpan 为函数，传入参数为当前行数据，函数返回结果为需要向后合并的列数，不合并返回 1\n *    -- 一个单元格同时指定了rowSpan和colSpan时，如果两行的colSpan计算结果不同，这两行不会合并\n * en - rowSpan & colSpan\n *    -- - Set column's rowSpan property to merge rows. The rowSpan property is a function that passed in two adjacent rows of data and determine whether to merge or not.\n *    -- - Set column's colSpan property to merge columns. The colSpan property is a function that passed in current row of data and the result returned by this function is as the number of columns that need to be merged.\n *    -- - When a cell specifies both rowSpan and colSpan, if the colSpan's calculation results of the two rows are different, the two rows will not be merged.\n */\nimport React, { PureComponent } from 'react'\nimport { Table } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      current: 1,\n      pageSize: 10,\n      total: 0,\n      sorter: { name: 'start', order: 'asc' },\n    }\n\n    this.columns = [\n      {\n        title: 'id',\n        render: 'id',\n        width: 70,\n        sorter: this.handleSorter.bind(this, 'id'),\n      },\n      { title: 'First Name', group: 'Name', render: 'firstName' },\n      { title: 'Last Name', group: 'Name', render: 'lastName' },\n      {\n        title: 'Start Date',\n        render: 'start',\n        sorter: this.handleSorter.bind(this, 'start'),\n        rowSpan: (a, b) => a.start === b.start,\n        colSpan: (d) => {\n          const hour = parseInt(d.time.slice(0, 2), 10)\n          if (hour > 21 || hour < 9) return 2\n          return 1\n        },\n      },\n      { title: 'Time', render: 'time' },\n      { title: 'Office', render: 'office5', rowSpan: true },\n    ]\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  handleSorter = (name, order) => {\n    this.setState({ sorter: { name, order }, current: 1 }, this.fetchData)\n  }\n\n  handlePageChange = (current, pageSize) => {\n    this.setState({ current, pageSize }, this.fetchData)\n  }\n\n  fetchData = () => {\n    const { sorter, current, pageSize } = this.state\n    this.setState({ loading: true })\n    fetch.get('user', { sorter, current, pageSize }).then((res) => {\n      this.setState({ data: res.data, loading: false, total: res.total })\n    })\n  }\n\n  render() {\n    const {\n      data, current, pageSize, total, loading,\n    } = this.state\n\n    return (\n      <Table\n        bordered\n        loading={loading}\n        data={data}\n        keygen=\"id\"\n        columns={this.columns}\n        pagination={{\n          align: 'center',\n          current,\n          pageSize,\n          layout: ['links', 'list'],\n          onChange: this.handlePageChange,\n          pageSizeList: [10, 15, 20],\n          total,\n        }}\n      />\n    )\n  }\n}\n"},876:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(1e4),s=[{title:"id",render:"id",width:70,sorter:function(e){return function(t,n){return"asc"===e?t.id-n.id:n.id-t.id}}},{title:"First Name",group:"Name",render:"firstName",rowSpan:function(e,t){return e.firstName===t.firstName},sorter:function(e){return function(t,n){return"asc"===e?t.firstName.localeCompare(n.firstName):n.firstName.localeCompare(t.firstName)}}},{title:"Last Name",group:"Name",render:"lastName"},{title:"Start Date",width:120,render:"start",rowSpan:function(e,t){return e.start===t.start},colSpan:function(e){var t=parseInt(e.time.slice(0,2),10);return t>21||t<9?2:1},sorter:function(e){return function(t,n){return"asc"===e?t.start.localeCompare(n.start):n.start.localeCompare(t.start)}}},{title:"Time",render:"time"},{title:"Office",render:"office5",rowSpan:!0}];t.default=function(){return a.a.createElement(i.B,{bordered:!0,data:d,keygen:"id",fixed:"y",columns:s,style:{height:650}})}},877:function(e,t){e.exports="/**\n * cn -\n *    -- 示例：不带分页的合并行/列\n * en -\n *    -- Example: Merged rows/columns without pagination.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(10000)\n\nconst columns = [\n  {\n    title: 'id',\n    render: 'id',\n    width: 70,\n    sorter: order => (a, b) => {\n      if (order === 'asc') return a.id - b.id\n      return b.id - a.id\n    },\n  },\n  {\n    title: 'First Name',\n    group: 'Name',\n    render: 'firstName',\n    rowSpan: (a, b) => a.firstName === b.firstName,\n    sorter: order => (a, b) => {\n      if (order === 'asc') return a.firstName.localeCompare(b.firstName)\n      return b.firstName.localeCompare(a.firstName)\n    },\n  },\n  { title: 'Last Name', group: 'Name', render: 'lastName' },\n  {\n    title: 'Start Date',\n    width: 120,\n    render: 'start',\n    rowSpan: (a, b) => a.start === b.start,\n    colSpan: (d) => {\n      const hour = parseInt(d.time.slice(0, 2), 10)\n      if (hour > 21 || hour < 9) return 2\n      return 1\n    },\n    sorter: order => (a, b) => {\n      if (order === 'asc') return a.start.localeCompare(b.start)\n      return b.start.localeCompare(a.start)\n    },\n  },\n  { title: 'Time', render: 'time' },\n  { title: 'Office', render: 'office5', rowSpan: true },\n]\n\nexport default function () {\n  return (\n    <Table\n      bordered\n      data={data}\n      keygen=\"id\"\n      fixed=\"y\"\n      columns={columns}\n      style={{ height: 650 }}\n    />\n  )\n}\n"},878:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return p});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(6),l=n(0),c=n.n(l),u=n(26),f=n(254),h=Object(f.b)(100),m=[{title:"id",render:"id",width:50,sorter:function(e){return function(t,n){return"asc"===e?t.id-n.id:n.id-t.id}}},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)},width:160},{title:"Position",render:"position"},{title:"Office",render:"office"}],p=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).state={selectedValue:[h[2]]},n.handelRowSelect=n.handelRowSelect.bind(Object(s.a)(Object(s.a)(n))),n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"handelRowSelect",value:function(e){console.log(e),this.setState({selectedValue:e})}},{key:"render",value:function(){return c.a.createElement("div",null,c.a.createElement(u.B,{fixed:"both",keygen:"id",columns:m,data:h,style:{height:450},onRowSelect:this.handelRowSelect,value:this.state.selectedValue}),c.a.createElement("div",null,"selected rows: [",this.state.selectedValue.map(function(e){return e.id}).join(", "),"]"))}}]),t}(l.PureComponent)},879:function(e,t){e.exports="/**\n * cn - 选择行\n *    -- 设置 onRowChange 属性，会自动添加选择列\n * en - Select\n *    -- Set the onRowChange property will automatically add a column with checkbox.\n */\nimport React, { PureComponent } from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(100)\n\nconst columns = [\n  {\n    title: 'id',\n    render: 'id',\n    width: 50,\n    sorter: order => (a, b) => {\n      if (order === 'asc') return a.id - b.id\n      return b.id - a.id\n    },\n  },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}`, width: 160 },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n]\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selectedValue: [data[2]],\n    }\n\n    this.handelRowSelect = this.handelRowSelect.bind(this)\n  }\n\n  handelRowSelect(selectedValue) {\n    console.log(selectedValue)\n    this.setState({ selectedValue })\n  }\n\n  render() {\n    return (\n      <div>\n        <Table\n          fixed=\"both\"\n          keygen=\"id\"\n          columns={columns}\n          data={data}\n          style={{ height: 450 }}\n          onRowSelect={this.handelRowSelect}\n          value={this.state.selectedValue}\n        />\n        <div>\n          selected rows: [{ this.state.selectedValue.map(v => v.id).join(', ') }]\n        </div>\n      </div>\n    )\n  }\n}\n"},880:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return m});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(0),l=n.n(s),c=n(26),u=n(254),f=Object(u.b)(20),h=[{title:"id",render:"id",width:50,sorter:function(e){return function(t,n){return"asc"===e?t.id-n.id:n.id-t.id}}},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)},width:160},{title:"Position",render:"position"},{title:"Office",render:"office"}],m=function(e){function t(e){var n;Object(r.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).handelRowSelect=function(e){n.setState({selectedValue:e})};var a=[2,3,5].map(function(e){return"".concat(f[e].firstName," ").concat(f[e].lastName)});return n.state={selectedValue:a},n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"render",value:function(){return l.a.createElement("div",null,l.a.createElement(c.B,{fixed:"both",keygen:"id",columns:h,data:f,format:function(e){return"".concat(e.firstName," ").concat(e.lastName)},style:{height:300},onRowSelect:this.handelRowSelect,value:this.state.selectedValue}),l.a.createElement("div",{style:{wordBreak:"break-all"}},"selected rows: ",JSON.stringify(this.state.selectedValue)))}}]),t}(s.PureComponent)},881:function(e,t){e.exports="/**\n * cn - 选择行 (format)\n *    -- 使用 format，可以格式化返回的数据\n * en - Select (format)\n *    -- Set format property to format the returned value.\n */\nimport React, { PureComponent } from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(20)\n\nconst columns = [\n  {\n    title: 'id',\n    render: 'id',\n    width: 50,\n    sorter: order => (a, b) => {\n      if (order === 'asc') return a.id - b.id\n      return b.id - a.id\n    },\n  },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}`, width: 160 },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n]\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    const value = [2, 3, 5].map(i => `${data[i].firstName} ${data[i].lastName}`)\n\n    this.state = {\n      selectedValue: value,\n    }\n  }\n\n  handelRowSelect = (values) => {\n    this.setState({ selectedValue: values })\n  }\n\n  render() {\n    return (\n      <div>\n        <Table\n          fixed=\"both\"\n          keygen=\"id\"\n          columns={columns}\n          data={data}\n          format={d => `${d.firstName} ${d.lastName}`}\n          style={{ height: 300 }}\n          onRowSelect={this.handelRowSelect}\n          value={this.state.selectedValue}\n        />\n        <div style={{ wordBreak: 'break-all' }}>\n          selected rows: { JSON.stringify(this.state.selectedValue) }\n        </div>\n      </div>\n    )\n  }\n}\n"},882:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return p});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(6),l=n(0),c=n.n(l),u=n(26),f=n(254),h=Object(f.b)(20),m=[{title:"id",render:"id",width:50,sorter:function(e){return function(t,n){return"asc"===e?t.id-n.id:n.id-t.id}}},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)},width:160},{title:"Position",render:"position"},{title:"Office",render:"office"}],p=function(e){function t(e){var n;Object(r.a)(this,t),n=Object(i.a)(this,Object(o.a)(t).call(this,e));var a=[2,3,5].map(function(e){return"".concat(h[e].firstName," ").concat(h[e].lastName)});return n.datum=new u.i.List({format:function(e){return"".concat(e.firstName," ").concat(e.lastName)},value:a,prediction:function(e,t){return e==="".concat(t.firstName," ").concat(t.lastName)},onChange:n.handelRowSelect.bind(Object(s.a)(Object(s.a)(n)))}),n.state={selectedValue:a},n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"handelRowSelect",value:function(e){this.setState({selectedValue:e})}},{key:"render",value:function(){return c.a.createElement("div",null,c.a.createElement(u.B,{fixed:"both",keygen:"id",columns:m,data:h,style:{height:300},datum:this.datum}),c.a.createElement("div",{style:{wordBreak:"break-all"}},"selected rows: ",JSON.stringify(this.state.selectedValue)))}}]),t}(l.PureComponent)},883:function(e,t){e.exports="/**\n * cn - 选择行 (Datum)\n *    -- 使用 Datum，可以做更复杂的数据处理的工作\n * en - Select (datum)\n *    -- Using Datum.List can process more complex data.\n */\nimport React, { PureComponent } from 'react'\nimport { Table, Datum } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(20)\n\nconst columns = [\n  {\n    title: 'id',\n    render: 'id',\n    width: 50,\n    sorter: order => (a, b) => {\n      if (order === 'asc') return a.id - b.id\n      return b.id - a.id\n    },\n  },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}`, width: 160 },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n]\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    const value = [2, 3, 5].map(i => `${data[i].firstName} ${data[i].lastName}`)\n\n    this.datum = new Datum.List({\n      format: d => `${d.firstName} ${d.lastName}`,\n      value,\n      prediction: (v, d) => v === `${d.firstName} ${d.lastName}`,\n      onChange: this.handelRowSelect.bind(this),\n    })\n\n    this.state = {\n      selectedValue: value,\n    }\n  }\n\n  handelRowSelect(values) {\n    this.setState({ selectedValue: values })\n  }\n\n  render() {\n    return (\n      <div>\n        <Table\n          fixed=\"both\"\n          keygen=\"id\"\n          columns={columns}\n          data={data}\n          style={{ height: 300 }}\n          datum={this.datum}\n        />\n        <div style={{ wordBreak: 'break-all' }}>\n          selected rows: { JSON.stringify(this.state.selectedValue) }\n        </div>\n      </div>\n    )\n  }\n}\n"},884:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return m});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(0),l=n.n(s),c=n(26),u=n(254),f=Object(u.b)(100),h=[{title:"id",render:"id",width:50,sorter:function(e){return function(t,n){return"asc"===e?t.id-n.id:n.id-t.id}}},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)},width:160},{title:"Position",render:"position"},{title:"Office",render:"office"}],m=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).handelRowSelect=function(e){n.setState({selectedText:e})},n.state={selectedText:[2,3,5]},n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"render",value:function(){return l.a.createElement("div",null,l.a.createElement(c.B,{fixed:"both",keygen:"id",columns:h,data:f,disabled:function(e){return e.id%3==0},style:{height:300},format:"id",onRowSelect:this.handelRowSelect,value:this.state.selectedText}),l.a.createElement("div",null,"selected rows: [",this.state.selectedText.join(", "),"]"))}}]),t}(s.PureComponent)},885:function(e,t){e.exports="/**\n * cn - 选择行（禁用）\n *    -- 设置 disabled 属性，禁用选项。\n * en - Select (disabled)\n *    -- Set disabled to disable the selection.\n */\nimport React, { PureComponent } from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(100)\n\nconst columns = [\n  {\n    title: 'id',\n    render: 'id',\n    width: 50,\n    sorter: order => (a, b) => {\n      if (order === 'asc') return a.id - b.id\n      return b.id - a.id\n    },\n  },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}`, width: 160 },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n]\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selectedText: [2, 3, 5],\n    }\n  }\n\n  handelRowSelect = (values) => {\n    this.setState({ selectedText: values })\n  }\n\n  render() {\n    return (\n      <div>\n        <Table\n          fixed=\"both\"\n          keygen=\"id\"\n          columns={columns}\n          data={data}\n          disabled={d => d.id % 3 === 0}\n          style={{ height: 300 }}\n          format=\"id\"\n          onRowSelect={this.handelRowSelect}\n          value={this.state.selectedText}\n        />\n        <div>\n          selected rows: [{ this.state.selectedText.join(', ') }]\n        </div>\n      </div>\n    )\n  }\n}\n"},886:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return h});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(6),l=n(0),c=n.n(l),u=n(26),f=n(254),h=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).handleSorter=function(e,t){n.setState({sorter:{name:e,order:t},current:1},n.fetchData)},n.handlePageChange=function(e,t){n.setState({current:e,pageSize:t},n.fetchData)},n.fetchData=function(){var e=n.state,t=e.sorter,r=e.current,a=e.pageSize;n.setState({loading:!0}),f.a.get("user",{sorter:t,current:r,pageSize:a}).then(function(e){n.setState({data:e.data,loading:!1,total:e.total})})},n.state={current:1,pageSize:5,total:0,selectedValue:""},n.datum=new u.i.List({format:"id",onChange:function(e){n.setState({selectedValue:e})}}),n.columns=[{title:"Id",render:"id",width:70,sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"id")},{title:"First Name",render:"firstName"},{title:"Last Name",render:"lastName",sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"lastName")},{title:"Office",render:"office"},{title:"Start Date",render:"start",sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"start")}],n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"componentDidMount",value:function(){this.fetchData()}},{key:"render",value:function(){var e=this.state,t=e.data,n=e.current,r=e.pageSize,a=e.total,i=e.loading,o=e.selectedValue;return c.a.createElement("div",null,c.a.createElement(u.B,{loading:i,data:t,keygen:"id",columns:this.columns,datum:this.datum,pagination:{align:"center",current:n,pageSize:r,onChange:this.handlePageChange,total:a}}),c.a.createElement("br",null),c.a.createElement("div",null,"selected rows: ",JSON.stringify(o)))}}]),t}(l.PureComponent)},887:function(e,t){e.exports="/**\n * cn - 选择行 (分页)\n *    -- 默认情况下，翻页时 Datum 对象会保留当前选中的数据\n * en - Select (paging)\n *    -- By default, the Datum object retains the currently selected data when the page is changed.\n */\nimport React, { PureComponent } from 'react'\nimport { Table, Datum } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      current: 1,\n      pageSize: 5,\n      total: 0,\n      selectedValue: '',\n    }\n\n    this.datum = new Datum.List({\n      format: 'id',\n      onChange: (selectedValue) => {\n        this.setState({ selectedValue })\n      },\n    })\n\n    this.columns = [\n      {\n        title: 'Id', render: 'id', width: 70, sorter: this.handleSorter.bind(this, 'id'),\n      },\n      { title: 'First Name', render: 'firstName' },\n      { title: 'Last Name', render: 'lastName', sorter: this.handleSorter.bind(this, 'lastName') },\n      { title: 'Office', render: 'office' },\n      { title: 'Start Date', render: 'start', sorter: this.handleSorter.bind(this, 'start') },\n    ]\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  handleSorter = (name, order) => {\n    this.setState({ sorter: { name, order }, current: 1 }, this.fetchData)\n  }\n\n  handlePageChange = (current, pageSize) => {\n    this.setState({ current, pageSize }, this.fetchData)\n  }\n\n  fetchData = () => {\n    const { sorter, current, pageSize } = this.state\n    this.setState({ loading: true })\n    fetch.get('user', { sorter, current, pageSize }).then((res) => {\n      this.setState({ data: res.data, loading: false, total: res.total })\n    })\n  }\n\n  render() {\n    const {\n      data, current, pageSize, total, loading, selectedValue,\n    } = this.state\n\n    return (\n      <div>\n        <Table\n          loading={loading}\n          data={data}\n          keygen=\"id\"\n          columns={this.columns}\n          datum={this.datum}\n          pagination={{\n            align: 'center',\n            current,\n            pageSize,\n            onChange: this.handlePageChange,\n            total,\n          }}\n        />\n        <br />\n        <div>\n          selected rows: {JSON.stringify(selectedValue)}\n        </div>\n      </div>\n    )\n  }\n}\n"},888:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return h});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(6),l=n(0),c=n.n(l),u=n(26),f=n(254),h=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).handlePageChange=function(e,t){n.setState({current:e,pageSize:t},n.fetchData)},n.handleSorter=function(e,t){n.setState({sorter:{name:e,order:t},current:1},n.fetchData)},n.fetchData=function(){var e=n.state,t=e.sorter,r=e.current,a=e.pageSize;n.setState({loading:!0}),f.a.get("user",{sorter:t,current:r,pageSize:a}).then(function(e){n.datum.clear(),n.setState({data:e.data,selectedValue:[],loading:!1,total:e.total})})},n.state={current:1,pageSize:5,total:0,selectedValue:""},n.datum=new u.i.List({format:"id",onChange:function(e){n.setState({selectedValue:e})}}),n.columns=[{title:"Id",render:"id",width:70,sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"id")},{title:"First Name",render:"firstName"},{title:"Last Name",render:"lastName"},{title:"Office",render:"office"},{title:"Start Date",render:"start",sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"start")}],n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"componentDidMount",value:function(){this.fetchData()}},{key:"render",value:function(){var e=this.state,t=e.data,n=e.current,r=e.pageSize,a=e.total,i=e.loading,o=e.selectedValue;return c.a.createElement("div",null,c.a.createElement(u.B,{bordered:!0,loading:i,data:t,keygen:"id",columns:this.columns,datum:this.datum,pagination:{align:"center",current:n,pageSize:r,onChange:this.handlePageChange,total:a}}),c.a.createElement("br",null),c.a.createElement("div",null,"selected rows: ",JSON.stringify(o)))}}]),t}(l.PureComponent)},889:function(e,t){e.exports="/**\n * cn -\n *    -- 如果需要翻页时清除选中数据，可以在翻页时调用 Datum.clear() 方法\n * en -\n *    -- If you need to clear the selected data when the page is changed, you can clear value property or call the Datum.clear() method.\n */\nimport React, { PureComponent } from 'react'\nimport { Table, Datum } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      current: 1,\n      pageSize: 5,\n      total: 0,\n      selectedValue: '',\n    }\n\n    this.datum = new Datum.List({\n      format: 'id',\n      onChange: (selectedValue) => {\n        this.setState({ selectedValue })\n      },\n    })\n\n    this.columns = [\n      {\n        title: 'Id', render: 'id', width: 70, sorter: this.handleSorter.bind(this, 'id'),\n      },\n      { title: 'First Name', render: 'firstName' },\n      { title: 'Last Name', render: 'lastName' },\n      { title: 'Office', render: 'office' },\n      { title: 'Start Date', render: 'start', sorter: this.handleSorter.bind(this, 'start') },\n    ]\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  handlePageChange = (current, pageSize) => {\n    this.setState({ current, pageSize }, this.fetchData)\n  }\n\n  handleSorter = (name, order) => {\n    this.setState({ sorter: { name, order }, current: 1 }, this.fetchData)\n  }\n\n  fetchData = () => {\n    const { sorter, current, pageSize } = this.state\n    this.setState({ loading: true })\n    fetch.get('user', { sorter, current, pageSize }).then((res) => {\n      this.datum.clear()\n\n      this.setState({\n        data: res.data,\n        selectedValue: [],\n        loading: false,\n        total: res.total,\n      })\n    })\n  }\n\n  render() {\n    const {\n      data, current, pageSize, total, loading, selectedValue,\n    } = this.state\n\n    return (\n      <div>\n        <Table\n          bordered\n          loading={loading}\n          data={data}\n          keygen=\"id\"\n          columns={this.columns}\n          datum={this.datum}\n          pagination={{\n            align: 'center',\n            current,\n            pageSize,\n            onChange: this.handlePageChange,\n            total,\n          }}\n        />\n        <br />\n        <div>\n          selected rows: {JSON.stringify(selectedValue)}\n        </div>\n      </div>\n    )\n  }\n}\n"},890:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return h});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(6),l=n(0),c=n.n(l),u=n(26),f=n(254),h=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).handleSorter=function(e,t){n.setState({sorter:{name:e,order:t},current:1},n.fetchData)},n.handlePageChange=function(e,t){n.setState({current:e,pageSize:t},n.fetchData)},n.fetchData=function(){var e=n.state,t=e.sorter,r=e.current,a=e.pageSize;n.setState({loading:!0}),f.a.get("user",{sorter:t,current:r,pageSize:a}).then(function(e){n.datum.clear(),n.setState({data:e.data,loading:!1,total:e.total})})},n.state={current:1,pageSize:10,total:0},n.datum=new u.i.List({format:"id",disabled:function(e){return!0===e.status}}),n.columns=[{title:"Id",render:"id",width:70,sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"id")},{title:"First Name",render:"firstName"},{title:"Last Name",render:"lastName"},{title:"Office",render:"office"},{title:"Start Date",render:"start",sorter:n.handleSorter.bind(Object(s.a)(Object(s.a)(n)),"start")},{width:100,render:function(e){return e.status?c.a.createElement("a",{onClick:n.handleTurnOff.bind(Object(s.a)(Object(s.a)(n)),e)},"turn off"):""}}],n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"componentDidMount",value:function(){this.fetchData()}},{key:"handleTurnOff",value:function(e){this.setState({loading:!0}),f.a.post("user",{op:"off",ids:[e.id]}).then(this.fetchData)}},{key:"handleOpClick",value:function(e){var t=this.datum.getValue();t.length>0?(this.setState({loading:!0}),f.a.post("user",{op:e,ids:t}).then(this.fetchData)):u.q.warn("No item selected.")}},{key:"render",value:function(){var e=this.state,t=e.data,n=e.current,r=e.pageSize,a=e.total,i=e.loading;return c.a.createElement("div",null,c.a.createElement("div",{style:{marginBottom:20}},c.a.createElement(u.c.Group,{outline:!0,type:"secondary"},c.a.createElement(u.c,{onClick:this.handleOpClick.bind(this,"on")},"On"),c.a.createElement(u.c,{onClick:this.handleOpClick.bind(this,"delete")},"Delete"))),c.a.createElement(u.B,{loading:i,data:t,keygen:"id",columns:this.columns,datum:this.datum,pagination:{align:"center",current:n,pageSize:r,onChange:this.handlePageChange,total:a}}))}}]),t}(l.PureComponent)},891:function(e,t){e.exports="/**\n * cn - 选择行 (示例)\n *    -- 可以不处理 onChange 事件，在调用时使用 datum.getValue 获取当前选中值。\n * en - Select (getValue)\n *    -- You can use datum.getValue to get current selected values.\n */\nimport React, { PureComponent } from 'react'\nimport { Table, Datum, Button, Message } from 'shineout'\nimport { fetch } from 'doc/data/user'\n\nexport default class extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      current: 1,\n      pageSize: 10,\n      total: 0,\n    }\n\n    this.datum = new Datum.List({\n      format: 'id',\n      disabled: d => d.status === true,\n    })\n\n    this.columns = [\n      {\n        title: 'Id', render: 'id', width: 70, sorter: this.handleSorter.bind(this, 'id'),\n      },\n      { title: 'First Name', render: 'firstName' },\n      { title: 'Last Name', render: 'lastName' },\n      { title: 'Office', render: 'office' },\n      { title: 'Start Date', render: 'start', sorter: this.handleSorter.bind(this, 'start') },\n      {\n        width: 100,\n        render: (d) => {\n          if (!d.status) return ''\n          return <a onClick={this.handleTurnOff.bind(this, d)}>turn off</a>\n        },\n      },\n    ]\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  handleSorter = (name, order) => {\n    this.setState({ sorter: { name, order }, current: 1 }, this.fetchData)\n  }\n\n  handlePageChange = (current, pageSize) => {\n    this.setState({ current, pageSize }, this.fetchData)\n  }\n\n  fetchData = () => {\n    const { sorter, current, pageSize } = this.state\n    this.setState({ loading: true })\n    fetch.get('user', { sorter, current, pageSize }).then((res) => {\n      this.datum.clear()\n\n      this.setState({\n        data: res.data,\n        loading: false,\n        total: res.total,\n      })\n    })\n  }\n\n  handleTurnOff(d) {\n    this.setState({ loading: true })\n    fetch.post('user', { op: 'off', ids: [d.id] }).then(this.fetchData)\n  }\n\n  handleOpClick(op) {\n    const ids = this.datum.getValue()\n    if (ids.length > 0) {\n      this.setState({ loading: true })\n      fetch.post('user', { op, ids }).then(this.fetchData)\n    } else {\n      Message.warn('No item selected.')\n    }\n  }\n\n  render() {\n    const {\n      data, current, pageSize, total, loading,\n    } = this.state\n\n    return (\n      <div>\n        <div style={{ marginBottom: 20 }}>\n          <Button.Group outline type=\"secondary\">\n            <Button onClick={this.handleOpClick.bind(this, 'on')}>On</Button>\n            <Button onClick={this.handleOpClick.bind(this, 'delete')}>Delete</Button>\n          </Button.Group>\n        </div>\n        <Table\n          loading={loading}\n          data={data}\n          keygen=\"id\"\n          columns={this.columns}\n          datum={this.datum}\n          pagination={{\n            align: 'center',\n            current,\n            pageSize,\n            onChange: this.handlePageChange,\n            total,\n          }}\n        />\n      </div>\n    )\n  }\n}\n"},892:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(100),s=[{title:"id",render:"id",width:50},{type:"expand",render:function(e){if(!(e.salary<3e5))return function(){return a.a.createElement("div",{style:{padding:"10px 30px",wordBreak:"break-all"}},JSON.stringify(e))}}},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)}},{title:"Office",render:"office"},{title:"Start Date",render:"start"},{title:"Salary",render:function(e){return"$".concat(e.salary.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,"))}}];t.default=function(){return a.a.createElement(i.B,{fixed:"y",data:d,keygen:"id",style:{height:300},columns:s})}},893:function(e,t){e.exports="/**\n * cn - 可展开\n *    -- 需要展开行时，可以增加一个 type 为 'expand' 的 column，render 函数返回函数时，表示此行可以展开，内容为此函数返回结果\n * en - Expand\n *    -- Add a column with type 'expand' and the render function returns a function, that means the row can be expanded. The content is the result returned by this function.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(100)\n\nconst columns = [\n  { title: 'id', render: 'id', width: 50 },\n  {\n    type: 'expand',\n    render: (d) => {\n      if (d.salary < 300000) return undefined\n      return () => <div style={{ padding: '10px 30px', wordBreak: 'break-all' }}>{JSON.stringify(d)}</div>\n    },\n  },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}` },\n  { title: 'Office', render: 'office' },\n  { title: 'Start Date', render: 'start' },\n  {\n    title: 'Salary',\n    render: d => `$${d.salary.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}`,\n  },\n]\n\nexport default function () {\n  return (\n    <Table\n      fixed=\"y\"\n      data={data}\n      keygen=\"id\"\n      style={{ height: 300 }}\n      columns={columns}\n    />\n  )\n}\n"},894:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return m});var r=n(1),a=n(3),i=n(4),o=n(2),d=n(5),s=n(0),l=n.n(s),c=n(26),u=n(254),f=Object(u.b)(1e4),h=[{title:"id",render:"id",width:80},{title:"Name",fixed:"left",render:function(e){return l.a.createElement("div",{id:"name_".concat(e.id),style:{height:e.height}},e.firstName," ",e.lastName)},width:160},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"},{title:"Start Date",render:"start",width:140}],m=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).handleIndexChange=function(e){var t=e.index;n.setState({index:t},n.handleScroll)},n.handleScroll=function(){n.table.scrollToIndex(n.state.index-1,function(){document.querySelector("#name_".concat(n.state.index)).style.color="red"})},n.state={index:25},n}return Object(d.a)(t,e),Object(a.a)(t,[{key:"componentDidMount",value:function(){setTimeout(this.handleScroll)}},{key:"render",value:function(){var e=this;return l.a.createElement("div",null,l.a.createElement(c.k,{value:this.state,inline:!0,onSubmit:this.handleIndexChange},l.a.createElement(c.o.Number,{min:0,max:9999,width:100,name:"index"}),l.a.createElement(c.k.Submit,null,"Scroll")),l.a.createElement(c.B,{fixed:"both",keygen:"id",width:1400,style:{height:600},columns:h,data:f,tableRef:function(t){e.table=t},rowsInView:10,rowHeight:80}))}}]),t}(s.Component)},895:function(e,t){e.exports="/**\n * cn - 滚动\n *    -- 固定表头的表格提供了一个 scrollToIndex 方法滚动到指定行，因为非固定行高的原因，滚动到未渲染过的行有一定偏差，请谨慎使用。\n * en - scrollToIndex\n *    -- The table of the fixed header provides a scrollToIndex method to scroll to the specified line. Because of the row height is not fixed, scrolling to the unrendered line has a little deviation. Please use it with caution.\n */\nimport React, { Component } from 'react'\nimport { Input, Table, Form } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(10000)\nconst columns = [\n  { title: 'id', render: 'id', width: 80 },\n  {\n    title: 'Name',\n    fixed: 'left',\n    render: d => <div id={`name_${d.id}`} style={{ height: d.height }}>{d.firstName} {d.lastName}</div>,\n    width: 160,\n  },\n  { title: 'Country', render: 'country' },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n  { title: 'Start Date', render: 'start', width: 140 },\n]\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { index: 25 }\n  }\n\n  componentDidMount() {\n    setTimeout(this.handleScroll)\n  }\n\n  handleIndexChange = ({ index }) => {\n    this.setState({ index }, this.handleScroll)\n  }\n\n  handleScroll = () => {\n    this.table.scrollToIndex(this.state.index - 1, () => {\n      document.querySelector(`#name_${this.state.index}`).style.color = 'red'\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Form value={this.state} inline onSubmit={this.handleIndexChange}>\n          <Input.Number\n            min={0}\n            max={9999}\n            width={100}\n            name=\"index\"\n          />\n          <Form.Submit>Scroll</Form.Submit>\n        </Form>\n        <Table\n          fixed=\"both\"\n          keygen=\"id\"\n          width={1400}\n          style={{ height: 600 }}\n          columns={columns}\n          data={data}\n          tableRef={(table) => { this.table = table }}\n          rowsInView={10}\n          rowHeight={80}\n        />\n      </div>\n    )\n  }\n}\n"},896:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(20),s=[{title:"id",render:"id",width:50},{title:"Name",render:function(e){return"".concat(e.firstName," ").concat(e.lastName)}},{title:"Country",render:"country"},{title:"Position",render:"position"},{title:"Office",render:"office"},{title:"Start Date",render:"start"},{title:"Salary",render:function(e){return"$".concat(e.salary.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,"))}}],l=function(e){return 2===e.id?"table-bg-danger":3===e.id?"table-bg-success":void 0};t.default=function(){return a.a.createElement("div",null,a.a.createElement(i.B,{fixed:"both",keygen:"id",width:1500,height:300,columns:s,data:d,rowClassName:l}))}},897:function(e,t){e.exports="/**\n * cn - 行样式\n *    -- 通过 rowClassName 设置单行样式（使用了 rowClassName 必须给 td 指定背景色）\n * en - Row ClassName\n *    -- Set the rowClassName property to set row style. (You must specify td background-color when the rowClassName is set)\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(20)\n\nconst columns = [\n  { title: 'id', render: 'id', width: 50 },\n  { title: 'Name', render: d => `${d.firstName} ${d.lastName}` },\n  { title: 'Country', render: 'country' },\n  { title: 'Position', render: 'position' },\n  { title: 'Office', render: 'office' },\n  { title: 'Start Date', render: 'start' },\n  {\n    title: 'Salary',\n    render: d => `$${d.salary.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}`,\n  },\n]\n\nconst rowClassName = (d) => {\n  if (d.id === 2) return 'table-bg-danger'\n  if (d.id === 3) return 'table-bg-success'\n  return undefined\n}\n\nexport default function () {\n  return (\n    <div>\n      <Table\n        fixed=\"both\"\n        keygen=\"id\"\n        width={1500}\n        height={300}\n        columns={columns}\n        data={data}\n        rowClassName={rowClassName}\n      />\n    </div>\n  )\n}\n"},898:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),a=n.n(r),i=n(26),o=n(254),d=Object(o.b)(6);t.default=function(){return a.a.createElement(i.B,{striped:!0,keygen:"id"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Office"),a.a.createElement("th",null,"Start Date"),a.a.createElement("th",null,"Salary"))),a.a.createElement("tbody",null,d.map(function(e){return a.a.createElement("tr",{key:e.id},a.a.createElement("td",null,e.firstName," ",e.lastName),a.a.createElement("td",null,e.office),a.a.createElement("td",null,e.start),a.a.createElement("td",null,"$",e.salary.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,")))})))}},899:function(e,t){e.exports="/**\n * cn - 只使用样式\n *    -- 使用原生的tr, td来显示表格\n * en - Style only\n *    -- Use the native tr and td to display the table.\n */\nimport React from 'react'\nimport { Table } from 'shineout'\nimport { fetchSync } from 'doc/data/user'\n\nconst data = fetchSync(6)\n\nexport default function () {\n  return (\n    <Table striped keygen=\"id\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Office</th>\n          <th>Start Date</th>\n          <th>Salary</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          data.map(d => (\n            <tr key={d.id}>\n              <td>{d.firstName} {d.lastName}</td>\n              <td>{d.office}</td>\n              <td>{d.start}</td>\n              <td>${d.salary.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}</td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </Table>\n  )\n}\n"}});