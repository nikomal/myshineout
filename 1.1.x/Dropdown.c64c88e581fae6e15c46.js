webpackJsonpShineoutDoc([24],{354:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=t(0),i=t.n(o),a=t(73),r=t(72),l=t(44),c=t(355),s=t.n(c),d=t(356),u=t.n(d),p=Object(l.a)(s.a,u.a),m=[{name:"1-base",title:Object(l.a)("基本用法 \n Dropdown 通过数据来渲染，支持 json 格式数据、React 组件","Base \n Dropdown is rendered through data and supports json formatted data and React components."),component:t(357).default,rawText:t(358)},{name:"2-hover",title:Object(l.a)('触发 \n Dropdown 默认通过点击触发下拉行为，设置 trigger="hover" 属性可以改为移入触发','Trigger \n By default, Dropdown toggled clicking, setting trigger="hover" can toggled by mouse move in.'),component:t(359).default,rawText:t(360)},{name:"3-position",title:Object(l.a)("弹出位置 \n 设置 position 属性可以控制下拉菜单弹出的方向和位置","Position \n Set position property can control the direction and position of the drop-down menu."),component:t(361).default,rawText:t(362)},{name:"4-items",title:Object(l.a)("多列平铺 \n 设置 columns 属性可以让选项多列平铺","Multiple columns \n Set columns property can make the option multi-column tiled."),component:t(363).default,rawText:t(364)},{name:"5-split",title:Object(l.a)("组合 \n 在 Button.Group 中组合使用，通常用于隐藏一组按钮中不太常用的选项","Group \n Dropdown can be combined with Button used in Button.Group."),component:t(365).default,rawText:t(366)},{name:"6-type",title:Object(l.a)("样式 \n 使用了和Button相同的 type 和 size 设置样式","type \n Style is set using the same type and size as Button."),component:t(367).default,rawText:t(368)}];e.default=Object(a.a)(function(n){return i.a.createElement(r.b,Object.assign({},n,{codes:void 0,source:p,examples:m}))})},355:function(n,e){n.exports="# Dropdown *下拉菜单*\n\n<example />\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| className | string | 无 | 扩展className |\n| columns | number | 无 | 页面多元素展示,此属性需要依赖width属性,请合理的设置列数和宽度 |\n| data | \\[] | 必填 | 下拉数据，详见data |\n| disabled | bool | false | 禁用 |\n| onClick | func | 无 | 点击事件。参数为渲染的数据, <br /> 注: 如果数据内设置了onClick，会忽略此方法，调用data.onClick |\n| outline | boolean | false | 同 [Button](#/components/Button) |\n| placeholder | string \\| ReactElement | 必填 | 按钮显示内容 |\n| renderItem | func \\| string | 'content' | 设置显示的内容,如果是字符串,则为对应的值<br />如果是函数,则返回值为显示的内容,参数为当条数据 |\n| size | string | 'default' | 同 [Button](#/components/Button) |\n| trigger | string | 'click' | 触发方式，可选值为 \\['click', 'hover'] |\n| type | string | 'default' | 可选值 \\['primary', 'secondary', 'success', 'info', 'warning', 'danger', 'link'] |\n| width | number | 无 | 弹出选项层的宽度 |\n\n### data\n\ndata 选项有三种情况：\n\n- 为 ReactElement 时，直接显示此元素。\n\n- 为 object 且设置了 renderItem，显示 renderItem 返回的内容。\n\n- 为 object 且未设置 renderItem，按以下数据结构处理。\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| content | string \\| element | | 默认从content获取内容 |\n| url | string | 无 | url属性不为空时，render为一个链接 |\n| target | string | 无 | url 不为空时有效 |\n| onClick | function | 无 | 点击事件 |"},356:function(n,e){n.exports="# Dropdown\n\n<example />\n\n## API\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| className | string | none | Extend className |\n| columns | number | none | Display multiple elements on the page. This property depends on the width attribute. Please set the number of columns and width appropriately. |\n| data | \\[] | required | See the detail in the data of the drop down box. |\n| disabled | bool | false | disabled |\n| onClick | func | none | The click event. The parameter is the rendered data. <br /> Note: if the onClick is set in the data, this method will be ignored and data.onclick will be called. |\n| outline | boolean | false | The same as [Button](#/components/Button) |\n| placeholder | string \\| ReactElement | required | Displayed content of the button |\n| renderItem | func \\| string | 'content' | Set the displayed content. If it is a string,  the corresponding value will be displayed. <br />If it is a function, the return value will be displayed and its parameter is the current data. |\n| size | string | 'default' | The same as [Button](#/components/Button) |\n| trigger | string | 'click' | Toggle mode, options: \\['click', 'hover'] |\n| type | string | 'default' | options: \\['primary', 'secondary', 'success', 'info', 'warning', 'danger', 'link'] |\n| width | number | none | The width of the pop-up option layer |\n\n### data\n\n- If data item is a ReactElement, render the item;\n- If data item is an object and renderItem is set, render the renderItem's result;\n- if data item is an object and renderItem is not set, handle the parameters as follows;\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| content | string \\| element | |  |\n| url | string | none | When the url is not empty, a url will be rendered. |\n| target | string | none | It is valid when the url is not empty. |\n| onClick | function | none | The click event |"},357:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=t(0),i=t.n(o),a=t(26),r=[{content:"Submenu",children:[{content:"Link to Google",target:"_blank",url:"https://google.com"},{content:"Disabled",disabled:!0}]},i.a.createElement("a",{href:"#/"},"Home"),{content:"Message",onClick:function(){a.q.info("Some message.")}}];e.default=function(){return i.a.createElement(a.j,{placeholder:"Dropdown",data:r})}},358:function(n,e){n.exports="/**\n * cn - 基本用法\n *    -- Dropdown 通过数据来渲染，支持 json 格式数据、React 组件\n * en - Base\n *    -- Dropdown is rendered through data and supports json formatted data and React components.\n */\nimport React from 'react'\nimport { Dropdown, Message } from 'shineout'\n\nconst data = [\n  {\n    content: 'Submenu',\n    children: [\n      {\n        content: 'Link to Google',\n        target: '_blank',\n        url: 'https://google.com',\n      },\n      {\n        content: 'Disabled',\n        disabled: true,\n      },\n    ],\n  },\n  <a href=\"#/\">Home</a>,\n  {\n    content: 'Message',\n    onClick: () => { Message.info('Some message.') },\n  },\n]\n\nexport default function () {\n  return (\n    <Dropdown placeholder=\"Dropdown\" data={data} />\n  )\n}\n"},359:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=t(0),i=t.n(o),a=t(26);e.default=function(){return i.a.createElement(a.j,{trigger:"hover",placeholder:"Hover",data:[{content:"First",id:"1",children:[{id:"3",content:"optic 1"}]},{content:"Second",url:"http://www.google.com",id:"2",children:[{content:"topic 2",id:4,children:[{id:"6",content:"topic 3"}]}]}]})}},360:function(n,e){n.exports="/**\n * cn - 触发\n *    -- Dropdown 默认通过点击触发下拉行为，设置 trigger=\"hover\" 属性可以改为移入触发\n * en - Trigger\n *    -- By default, Dropdown toggled clicking, setting trigger=\"hover\" can toggled by mouse move in.\n */\nimport React from 'react'\nimport { Dropdown } from 'shineout'\n\nexport default function () {\n  const menu = [{\n    content: 'First',\n    id: '1',\n    children: [{\n      id: '3',\n      content: 'optic 1',\n    }],\n  }, {\n    content: 'Second',\n    url: 'http://www.google.com',\n    id: '2',\n    children: [{\n      content: 'topic 2',\n      id: 4,\n      children: [{\n        id: '6',\n        content: 'topic 3',\n      }],\n    }],\n  }]\n\n  return (\n    <Dropdown trigger=\"hover\" placeholder=\"Hover\" data={menu} />\n  )\n}\n\n"},361:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=t(0),i=t.n(o),a=t(26),r={marginRight:12,marginBottom:12};e.default=function(){var n=[{content:"First",id:"1",children:[{content:"link1",id:"4"},{content:"link2",id:"5"}]},{content:"Second",url:"http://www.google.com",id:"2",children:[{content:"link3",id:6,onClick:function(){console.log("this is special")}},{content:"link4",id:7,children:[{id:"8",content:"link5"},{id:"9",content:"link6"}]}]}];return i.a.createElement("div",null,i.a.createElement(a.j,{placeholder:"Right Top",style:r,position:"right-top",data:n}),i.a.createElement(a.j,{placeholder:"Bottom Left",style:r,position:"bottom-left",data:n}),i.a.createElement(a.j,{placeholder:"Bottom Right",style:r,position:"bottom-right",data:n}),i.a.createElement(a.j,{placeholder:"Left Top",style:r,position:"left-top",data:n}),i.a.createElement("br",null),i.a.createElement(a.j,{placeholder:"Right Bottom",style:r,position:"right-bottom",data:n}),i.a.createElement(a.j,{placeholder:"Top Left",style:r,position:"top-left",data:n}),i.a.createElement(a.j,{placeholder:"Top Right",style:r,position:"top-right",data:n}),i.a.createElement(a.j,{placeholder:"Left Bottom",style:r,position:"left-bottom",data:n}))}},362:function(n,e){n.exports="/**\n * cn - 弹出位置\n *    -- 设置 position 属性可以控制下拉菜单弹出的方向和位置\n * en - Position\n *    -- Set position property can control the direction and position of the drop-down menu.\n */\nimport React from 'react'\nimport { Dropdown } from 'shineout'\n\nconst style = { marginRight: 12, marginBottom: 12 }\n\nexport default function () {\n  const menu = [{\n    content: 'First',\n    id: '1',\n    children: [{\n      content: 'link1',\n      id: '4',\n    }, {\n      content: 'link2',\n      id: '5',\n    }],\n  }, {\n    content: 'Second',\n    url: 'http://www.google.com',\n    id: '2',\n    children: [{\n      content: 'link3',\n      id: 6,\n      onClick: () => { console.log('this is special') },\n    }, {\n      content: 'link4',\n      id: 7,\n      children: [{\n        id: '8',\n        content: 'link5',\n      }, {\n        id: '9',\n        content: 'link6',\n      }],\n    }],\n  }]\n\n  return (\n    <div>\n      <Dropdown placeholder=\"Right Top\" style={style} position=\"right-top\" data={menu} />\n\n      <Dropdown placeholder=\"Bottom Left\" style={style} position=\"bottom-left\" data={menu} />\n\n      <Dropdown placeholder=\"Bottom Right\" style={style} position=\"bottom-right\" data={menu} />\n\n      <Dropdown placeholder=\"Left Top\" style={style} position=\"left-top\" data={menu} />\n\n      <br />\n\n      <Dropdown placeholder=\"Right Bottom\" style={style} position=\"right-bottom\" data={menu} />\n\n      <Dropdown placeholder=\"Top Left\" style={style} position=\"top-left\" data={menu} />\n\n      <Dropdown placeholder=\"Top Right\" style={style} position=\"top-right\" data={menu} />\n\n      <Dropdown placeholder=\"Left Bottom\" style={style} position=\"left-bottom\" data={menu} />\n    </div>\n  )\n}\n"},363:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=t(0),i=t.n(o),a=t(26);e.default=function(){for(var n=[],e=1;e<=30;e++)n.push({id:"".concat(e),content:"item".concat(e)});return i.a.createElement(a.j,{placeholder:"Dropdown",width:500,columns:5,data:n})}},364:function(n,e){n.exports="/**\n * cn - 多列平铺\n *    -- 设置 columns 属性可以让选项多列平铺\n * en - Multiple columns\n *    -- Set columns property can make the option multi-column tiled.\n */\nimport React from 'react'\nimport { Dropdown } from 'shineout'\n\nexport default function () {\n  const menu = []\n  for (let i = 1; i <= 30; i++) {\n    menu.push((\n      {\n        id: `${i}`,\n        content: `item${i}`,\n      }\n    ))\n  }\n\n  return (\n    <Dropdown placeholder=\"Dropdown\" width={500} columns={5} data={menu} />\n  )\n}\n\n"},365:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=t(0),i=t.n(o),a=t(26),r=[{content:"First"},{content:"Second",target:"_blank",url:"http://www.google.com"}];e.default=function(){return i.a.createElement(a.c.Group,null,i.a.createElement(a.c,{onClick:function(){return a.q.info("The left button clicked.")}},"Left"),i.a.createElement(a.c,null,"Center"),i.a.createElement(a.j,{onClick:function(n){return a.q.info("The Dropdown clicked ".concat(n.content,"."))},position:"bottom-right",data:r}))}},366:function(n,e){n.exports="/**\n * cn - 组合\n *    -- 在 Button.Group 中组合使用，通常用于隐藏一组按钮中不太常用的选项\n * en - Group\n *    -- Dropdown can be combined with Button used in Button.Group.\n */\nimport React from 'react'\nimport { Dropdown, Message, Button } from 'shineout'\n\nconst menu = [\n  {\n    content: 'First',\n  },\n  {\n    content: 'Second',\n    target: '_blank',\n    url: 'http://www.google.com',\n  },\n]\n\nexport default function () {\n  return (\n    <Button.Group>\n      <Button onClick={() => Message.info('The left button clicked.')}>Left</Button>\n      <Button>Center</Button>\n      <Dropdown\n        onClick={data => Message.info(`The Dropdown clicked ${data.content}.`)}\n        position=\"bottom-right\"\n        data={menu}\n      />\n    </Button.Group>\n  )\n}\n\n"},367:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),t.d(e,"default",function(){return m});var o=t(25),i=t(1),a=t(3),r=t(4),l=t(2),c=t(5),s=t(0),d=t.n(s),u=t(26),p=[{content:"Submenu",children:[{content:"Link",target:"_blank",url:"https://google.com"},{content:"Disabled",disabled:!0}]},{content:"Message",onClick:function(){u.q.info("Some message.")}}],m=function(n){function e(n){var t;return Object(i.a)(this,e),(t=Object(r.a)(this,Object(l.a)(e).call(this,n))).state={type:"primary",size:"default",disabled:!1,outline:!1},t}return Object(c.a)(e,n),Object(a.a)(e,[{key:"changeSetting",value:function(n,e){this.setState(Object(o.a)({},n,e))}},{key:"render",value:function(){var n=this.state,e=n.type,t=n.outline,o=n.size,i=n.disabled;return d.a.createElement("div",null,d.a.createElement("div",{style:{marginBottom:20}},d.a.createElement("span",null,"type: "),d.a.createElement(u.x,{width:140,keygen:function(n){return n},data:["primary","success","warning","danger"],value:e,onChange:this.changeSetting.bind(this,"type"),style:{marginRight:20}}),d.a.createElement("span",null,"size: "),d.a.createElement(u.x,{width:100,keygen:function(n){return n},data:["small","default","large"],value:o,onChange:this.changeSetting.bind(this,"size"),style:{marginRight:20}}),d.a.createElement(u.g,{value:t,onChange:this.changeSetting.bind(this,"outline")},"outline"),d.a.createElement(u.g,{value:i,onChange:this.changeSetting.bind(this,"disabled")},"disabled")),d.a.createElement(u.j,{placeholder:"Dropdown",data:p,disabled:i,outline:t,size:o,type:e}))}}]),e}(s.Component)},368:function(n,e){n.exports="/**\n * cn - 样式\n *    -- 使用了和Button相同的 type 和 size 设置样式\n * en - type\n *    -- Style is set using the same type and size as Button.\n */\nimport React, { Component } from 'react'\nimport { Dropdown, Message, Select, Checkbox } from 'shineout'\n\nconst menu = [\n  {\n    content: 'Submenu',\n    children: [\n      {\n        content: 'Link',\n        target: '_blank',\n        url: 'https://google.com',\n      },\n      {\n        content: 'Disabled',\n        disabled: true,\n      },\n    ],\n  },\n  {\n    content: 'Message',\n    onClick: () => { Message.info('Some message.') },\n  },\n]\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      type: 'primary',\n      size: 'default',\n      disabled: false,\n      outline: false,\n    }\n  }\n\n  changeSetting(name, value) {\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    const {\n      type, outline, size, disabled,\n    } = this.state\n    return (\n      <div>\n        <div style={{ marginBottom: 20 }}>\n          <span>type: </span>\n          <Select\n            width={140}\n            keygen={d => d}\n            data={['primary', 'success', 'warning', 'danger']}\n            value={type}\n            onChange={this.changeSetting.bind(this, 'type')}\n            style={{ marginRight: 20 }}\n          />\n\n          <span>size: </span>\n          <Select\n            width={100}\n            keygen={d => d}\n            data={['small', 'default', 'large']}\n            value={size}\n            onChange={this.changeSetting.bind(this, 'size')}\n            style={{ marginRight: 20 }}\n          />\n\n          <Checkbox value={outline} onChange={this.changeSetting.bind(this, 'outline')}>\n            outline\n          </Checkbox>\n\n          <Checkbox value={disabled} onChange={this.changeSetting.bind(this, 'disabled')}>\n            disabled\n          </Checkbox>\n        </div>\n\n        <Dropdown\n          placeholder=\"Dropdown\"\n          data={menu}\n          disabled={disabled}\n          outline={outline}\n          size={size}\n          type={type}\n        />\n      </div>\n    )\n  }\n}\n"}});