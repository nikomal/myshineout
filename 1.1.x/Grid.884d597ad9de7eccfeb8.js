webpackJsonpShineoutDoc([28],{1039:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),i=t.n(r),a=t(73),o=t(72),f=t(44),c=t(1040),l=t.n(c),s=t(1041),d=t.n(s),u=Object(f.a)(l.a,d.a),m=[{name:"01-base",title:Object(f.a)("任意等分 \n Grid 的栅格体系是动态生成，可以实现任意等份","Arbitrary \n Grid system is dynamic generated and can be any number."),component:t(1042).default,rawText:t(1043)},{name:"02-offset",title:Object(f.a)("偏移 \n offset 属性可以设置偏移，取值方式和宽度相同","Offset \n The offset property set the offset in the same way as the width."),component:t(1044).default,rawText:t(1045)},{name:"03-nested",title:Object(f.a)("嵌套 \n 嵌套的栅格","Nested \n Nested grids"),component:t(1046).default,rawText:t(1047)},{name:"04-gutter",title:Object(f.a)("间距 \n 通过 gutter 属性设置栅格间距","Gutter \n Set grid spacing through the gutter property."),component:t(1048).default,rawText:t(1049)}];n.default=Object(a.a)(function(e){return i.a.createElement(o.b,Object.assign({},e,{codes:void 0,source:u,examples:m}))})},1040:function(e,n){e.exports="# Grid *栅格*\n\n动态栅格体系，用于某些不适合使用 flex 的地方\n\n<example />\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| --- | --- | --- | --- |\n| className | string | 无 | 扩展className |\n| gutter | number | 无 | 栅格之间间距 |\n| offset | number | 0 | 左偏移百分比，0 <= offset < 1 |\n| style | object | 无 | 最外层扩展样式 |\n| width | number | 1 | 宽度百分比，0 < number <= 1 |\n"},1041:function(e,n){e.exports="# Grid\n\n<example />\n\n# API\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| className | string | none | Extend className |\n| gutter | number | none | Spacing between grids |\n| offset | number | 0 | Left offset percentage, 0 <= offset < 1 |\n| style | object | - | Container element style |\n| width | number | 1 | Percentage of width, 0 < number <= 1 |"},1042:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t.d(n,"default",function(){return d});var r=t(1),i=t(3),a=t(4),o=t(2),f=t(5),c=t(0),l=t.n(c),s=t(26),d=function(e){function n(e){var t;return Object(r.a)(this,n),(t=Object(a.a)(this,Object(o.a)(n).call(this,e))).handleCountChange=function(e){t.setState({count:e})},t.state={count:5},t}return Object(f.a)(n,e),Object(i.a)(n,[{key:"render",value:function(){var e=this.state.count;return l.a.createElement("div",null,l.a.createElement(s.y,{formatValue:!1,scale:[1,2,3,5,8,13,21,34,55],step:0,value:e,onChange:this.handleCountChange}),l.a.createElement("div",{style:{height:20}}),Array.from({length:e}).map(function(n,t){return l.a.createElement("div",{key:t,style:{background:"#f2f2f2",marginBottom:4,lineHeight:"30px"}},l.a.createElement(s.l,{width:(t+1)/e,style:{color:"#fff",paddingLeft:8,background:"#3399ff"}},t+1,"/",e))}))}}]),n}(c.Component)},1043:function(e,n){e.exports="/**\n * cn - 任意等分\n *    -- Grid 的栅格体系是动态生成，可以实现任意等份\n * en - Arbitrary\n *    -- Grid system is dynamic generated and can be any number.\n */\nimport React, { Component } from 'react'\nimport { Grid, Slider } from 'shineout'\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { count: 5 }\n  }\n\n  handleCountChange = (count) => {\n    this.setState({ count })\n  }\n\n  render() {\n    const { count } = this.state\n\n    return (\n      <div>\n        <Slider\n          formatValue={false}\n          scale={[1, 2, 3, 5, 8, 13, 21, 34, 55]}\n          step={0}\n          value={count}\n          onChange={this.handleCountChange}\n        />\n\n        <div style={{ height: 20 }} />\n\n        {\n          Array.from({ length: count }).map((n, i) => (\n            <div key={i} style={{ background: '#f2f2f2', marginBottom: 4, lineHeight: '30px' }}>\n              <Grid width={(i + 1) / count} style={{ color: '#fff', paddingLeft: 8, background: '#3399ff' }}>\n                {i + 1}/{count}\n              </Grid>\n            </div>\n          ))\n        }\n      </div>\n    )\n  }\n}\n"},1044:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),i=t.n(r),a=t(26),o={color:"#fff",lineHeight:"60px",textAlign:"center",background:"#3399ff"};n.default=function(){return i.a.createElement("div",{style:{background:"#f2f2f2"}},i.a.createElement(a.l,{width:1/3,offset:1/3,style:o},"With 1/3, Offset 1/3"))}},1045:function(e,n){e.exports="/**\n * cn - 偏移\n *    -- offset 属性可以设置偏移，取值方式和宽度相同\n * en - Offset\n *    -- The offset property set the offset in the same way as the width.\n */\nimport React from 'react'\nimport { Grid } from 'shineout'\n\nconst style = {\n  color: '#fff',\n  lineHeight: '60px',\n  textAlign: 'center',\n  background: '#3399ff',\n}\n\nexport default function () {\n  return (\n    <div style={{ background: '#f2f2f2' }}>\n      <Grid width={1 / 3} offset={1 / 3} style={style}>\n        With 1/3, Offset 1/3\n      </Grid>\n    </div>\n  )\n}\n"},1046:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(10),i=t(0),a=t.n(i),o=t(26),f={color:"#fff",lineHeight:"30px",textAlign:"center",background:"#3399ff"};n.default=function(){return a.a.createElement(o.l,{style:{textAlign:"center"}},a.a.createElement(o.l,{width:.5,style:f},"1/2"),a.a.createElement(o.l,{width:.5,style:{lineHeight:"30px"}},a.a.createElement("div",null,"1/2"),a.a.createElement("div",null,a.a.createElement(o.l,{style:f,width:1/3},"1/3"),a.a.createElement(o.l,{style:Object(r.a)({},f,{background:"#f5f5f5",color:"#333"}),width:1/3},"1/3"),a.a.createElement(o.l,{style:f,width:1/3},"1/3"))))}},1047:function(e,n){e.exports="/**\n * cn - 嵌套\n *    -- 嵌套的栅格\n * en - Nested\n *    -- Nested grids\n */\nimport React from 'react'\nimport { Grid } from 'shineout'\n\nconst style = {\n  color: '#fff',\n  lineHeight: '30px',\n  textAlign: 'center',\n  background: '#3399ff',\n}\n\nexport default function () {\n  return (\n    <Grid style={{ textAlign: 'center' }}>\n      <Grid width={1 / 2} style={style}>1/2</Grid>\n\n      <Grid width={1 / 2} style={{ lineHeight: '30px' }}>\n        <div>1/2</div>\n        <div>\n          <Grid style={style} width={1 / 3}>1/3</Grid>\n          <Grid style={{ ...style, background: '#f5f5f5', color: '#333' }} width={1 / 3}>1/3</Grid>\n          <Grid style={style} width={1 / 3}>1/3</Grid>\n        </div>\n      </Grid>\n    </Grid>\n  )\n}\n"},1048:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(0),i=t.n(r),a=t(26),o={color:"#fff",lineHeight:"30px",textAlign:"center",background:"#3399ff"};n.default=function(){return i.a.createElement("div",{style:{background:"#f2f2f2"}},i.a.createElement(a.l,{gutter:8},Array.from({length:8}).map(function(e,n){return n+1}).map(function(e){return i.a.createElement(a.l,{key:e,width:1/8},i.a.createElement("div",{style:o},"1/8"))})))}},1049:function(e,n){e.exports="/**\n * cn - 间距\n *    -- 通过 gutter 属性设置栅格间距\n * en - Gutter\n *    -- Set grid spacing through the gutter property.\n */\nimport React from 'react'\nimport { Grid } from 'shineout'\n\nconst style = {\n  color: '#fff',\n  lineHeight: '30px',\n  textAlign: 'center',\n  background: '#3399ff',\n}\n\nexport default function () {\n  return (\n    <div style={{ background: '#f2f2f2' }}>\n      <Grid gutter={8}>\n        {\n          Array.from({ length: 8 }).map((_, i) => i + 1).map(i => (\n            <Grid key={i} width={1 / 8}>\n              <div style={style}>1/8</div>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </div>\n  )\n}\n"}});