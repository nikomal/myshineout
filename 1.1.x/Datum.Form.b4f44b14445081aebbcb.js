webpackJsonpShineoutDoc([35],{295:function(e,n,t){"use strict";var o=t(1),a=t(3),l=window.console,s=function(){function e(){Object(o.a)(this,e),this.logs={default:[]},this.current=this.logs.default}return Object(a.a)(e,[{key:"setType",value:function(e){this.logs[e]||(this.logs[e]=[]),this.current=this.logs[e]}},{key:"log",value:function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];var o=n.map(function(e){return"".concat(JSON.stringify(e))});this.current.push(o)}}]),e}();n.a={start:function(){window.console=new s},setType:function(e){window.console.setType(e)},end:function(){var e=window.console.logs;return window.console=l,e}}},808:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=t(0),a=t.n(o),l=t(73),s=t(72),u=t(295),i=t(44),c=t(809),r=t.n(c),m=t(810),f=t.n(m),d=Object(i.a)(r.a,f.a),g=[];u.a.start(),u.a.setType("example"),t(811);var v=u.a.end(),h={example:{text:t(812),log:v.example}};n.default=Object(l.a)(function(e){return a.a.createElement(s.b,Object.assign({},e,{codes:h,source:d,examples:g}))})},809:function(e,n){e.exports='# Data.Form 表单数据处理\n\nForm 表单数据处理辅助类，用来收集和分发数据到输入组件。\n\n## 示例\n\n<code name="example" />\n\n实际使用见 [Form](#/components/Form)\n\n## 初始化参数\n\n### removeUndefined *boolean*\n\n是否移除值为 undefined 的数据，默认值为 true。\n\n### onChange *function(data)*\n\n值变化时回调函数。\n\n### value *object*\n\n初始值\n\n## 函数\n\n### getValue *function():object*\n获取当前表单所有对象值。\n\n### setValue *function(object)*\n设置值。新的值会替代当前值。\n\n### set *fuction(name, value)*\n设置数据。\n\n### get *fuction(name)*\n获取单个字段值。\n\n### validateFields *function(names)*\n校验指定字段。names为字段名称数组。\n\n### validateClear *function()*\n清除校验结果。'},810:function(e,n){e.exports='# Data.Form\n\nThe auxiliary class of Form that process data for collecting and distributing data to input components.\n\n## Example\n\n<code name="example" />\n\n<br />\n\nSee the example use in [Form](#/components/Form)\n\n## Arguments\n\n### removeUndefined *boolean*\n\nWhether to remove the data whose value is undefined. The default value is true.\n\n### onChange *function(data)*\n\nThe callback function when the value is changing.\n\n### value *object*\n\nThe initial value.\n\n## Methods\n\n### getValue *function():object*\nGet all values of the current form.\n\n### setValue *function(object)*\nSet new value, will replace the current value。\n\n### set *fuction(name, value)*\nSet the value specified by name.\n\n### get *fuction(name)*\nGet a single field value.\n\n### validateFields *function(names)*\nVerify specified fields.\n\n### validateClear *function()*\nClear the validate result.'},811:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=new(t(26).i.Form);o.setValue({email:"test@123.com",name:{lastName:"Potter"},favors:["red","yellow"]}),o.set("age",20),o.set("name.firstName","Harry"),console.log(o.get("age")),console.log(o.get("name")),console.log(o.get("name.firstName")),console.log(o.get("name.lastName")),console.log(o.get("favors.[1]")),o.set("favors.[2]","blue"),console.log(o.get("favors")),console.log(o.getValue())},812:function(e,n){e.exports="import { Datum } from 'shineout'\n\nconst datum = new Datum.Form()\n\ndatum.setValue({ email: 'test@123.com', name: { lastName: 'Potter' }, favors: ['red', 'yellow'] })\ndatum.set('age', 20)\ndatum.set('name.firstName', 'Harry')\nconsole.log(datum.get('age'))\nconsole.log(datum.get('name'))\nconsole.log(datum.get('name.firstName'))\nconsole.log(datum.get('name.lastName'))\nconsole.log(datum.get('favors.[1]'))\ndatum.set('favors.[2]', 'blue')\nconsole.log(datum.get('favors'))\nconsole.log(datum.getValue())\n"}});